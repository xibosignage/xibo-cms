{
    "swagger": "2.0",
    "info": {
        "title": "Xibo API",
        "description": "Xibo CMS API",
        "termsOfService": "http://xibo.org.uk/legal",
        "contact": {
            "email": "info@xibo.org.uk"
        },
        "license": {
            "name": "AGPLv3 or later",
            "url": "http://www.gnu.org/licenses/"
        },
        "version": "1.8.0-alpha3"
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/campaign": {
            "get": {
                "tags": [
                    "campaign"
                ],
                "summary": "Search Campaigns",
                "description": "Search all Campaigns this user has access to",
                "operationId": "campaignSearch",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "formData",
                        "description": "Filter by Campaign Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Filter by Name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Campaign"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "campaign"
                ],
                "summary": "Add Campaign",
                "description": "Add a Campaign",
                "operationId": "campaignAdd",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for this Campaign",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Campaign"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaign/{campaignId}": {
            "put": {
                "tags": [
                    "campaign"
                ],
                "summary": "Edit Campaign",
                "description": "Edit an existing Campaign",
                "operationId": "campaignEdit",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The Campaign ID to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for this Campaign",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Campaign"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "campaign"
                ],
                "summary": "Delete Campaign",
                "description": "Delete an existing Campaign",
                "operationId": "campaignDelete",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The Campaign ID to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/clock": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "The current CMS time",
                "description": "The Time",
                "operationId": "clock",
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "title": "time",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/command": {
            "get": {
                "tags": [
                    "command"
                ],
                "summary": "Command Search",
                "description": "Search this users Commands",
                "operationId": "commandSearch",
                "parameters": [
                    {
                        "name": "commandId",
                        "in": "formData",
                        "description": "Filter by Command Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "command",
                        "in": "formData",
                        "description": "Filter by Command Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "Filter by Command Code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Command"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "command"
                ],
                "summary": "Command Add",
                "description": "Add a Command",
                "operationId": "commandAdd",
                "parameters": [
                    {
                        "name": "command",
                        "in": "formData",
                        "description": "The Command Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description for the command",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "A unique code for this command",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Command"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/command/{commandId}": {
            "put": {
                "tags": [
                    "command"
                ],
                "summary": "Edit Command",
                "description": "Edit the provided command",
                "operationId": "commandEdit",
                "parameters": [
                    {
                        "name": "commandId",
                        "in": "path",
                        "description": "The Command Id to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "command",
                        "in": "formData",
                        "description": "The Command Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description for the command",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Command"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "command"
                ],
                "summary": "Delete Command",
                "description": "Delete the provided command",
                "operationId": "commandDelete",
                "parameters": [
                    {
                        "name": "commandId",
                        "in": "path",
                        "description": "The Command Id to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/dataset": {
            "get": {
                "tags": [
                    "dataset"
                ],
                "summary": "DataSet Search",
                "description": "Search this users DataSets",
                "operationId": "dataSetSearch",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "formData",
                        "description": "Filter by DataSet Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "dataSet",
                        "in": "formData",
                        "description": "Filter by DataSet Name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSet"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dataset"
                ],
                "summary": "Add DataSet",
                "description": "Add a DataSet",
                "operationId": "dataSetAdd",
                "parameters": [
                    {
                        "name": "dataSet",
                        "in": "formData",
                        "description": "The DataSet Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description of this DataSet",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSet"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dataset/{dataSetId}": {
            "put": {
                "tags": [
                    "dataset"
                ],
                "summary": "Edit DataSet",
                "description": "Edit a DataSet",
                "operationId": "dataSetEdit",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSet",
                        "in": "formData",
                        "description": "The DataSet Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description of this DataSet",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSet"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "dataset"
                ],
                "summary": "Delete DataSet",
                "description": "Delete a DataSet",
                "operationId": "dataSetDelete",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/dataset/import/{dataSetId}": {
            "post": {
                "tags": [
                    "dataset"
                ],
                "summary": "Import CSV",
                "description": "Import a CSV into a DataSet",
                "operationId": "dataSetImport",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID to import into.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/dataset/{dataSetId}/column": {
            "get": {
                "tags": [
                    "dataset"
                ],
                "summary": "Search Columns",
                "description": "Search Columns for DataSet",
                "operationId": "dataSetColumnSearch",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnId",
                        "in": "formData",
                        "description": "Filter by DataSet ColumnID",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSetColumn"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dataset"
                ],
                "summary": "Add Column",
                "description": "Add a Column to a DataSet",
                "operationId": "dataSetColumnAdd",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "heading",
                        "in": "formData",
                        "description": "The heading for the Column",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listContent",
                        "in": "formData",
                        "description": "A comma separated list of content for drop downs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "columnOrder",
                        "in": "formData",
                        "description": "The display order for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataTypeId",
                        "in": "formData",
                        "description": "The data type ID for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnTypeId",
                        "in": "formData",
                        "description": "The column type for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "formula",
                        "in": "formData",
                        "description": "MySQL SELECT syntax formula for this Column if the column type is formula",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSetColumn"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dataset/{dataSetId}/column/{dataSetColumnId}": {
            "put": {
                "tags": [
                    "dataset"
                ],
                "summary": "Edit Column",
                "description": "Edit a Column to a DataSet",
                "operationId": "dataSetColumnEdit",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnId",
                        "in": "path",
                        "description": "The Column ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "heading",
                        "in": "formData",
                        "description": "The heading for the Column",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listContent",
                        "in": "formData",
                        "description": "A comma separated list of content for drop downs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "columnOrder",
                        "in": "formData",
                        "description": "The display order for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataTypeId",
                        "in": "formData",
                        "description": "The data type ID for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnTypeId",
                        "in": "formData",
                        "description": "The column type for this column",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "formula",
                        "in": "formData",
                        "description": "MySQL SELECT syntax formula for this Column if the column type is formula",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSetColumn"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "dataset"
                ],
                "summary": "Delete Column",
                "description": "Delete DataSet Column",
                "operationId": "dataSetColumnDelete",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnId",
                        "in": "path",
                        "description": "The Column ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/dataset/data/{dataSetId}": {
            "get": {
                "tags": [
                    "dataset"
                ],
                "summary": "DataSet Data",
                "description": "Get Data for DataSet",
                "operationId": "dataSetData",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "dataset"
                ],
                "summary": "Add Row",
                "description": "Add a row of Data to a DataSet",
                "operationId": "dataSetDataAdd",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnId_ID",
                        "in": "formData",
                        "description": "Parameter for each dataSetColumnId in the DataSet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dataset/data/{dataSetId}/{rowId}": {
            "put": {
                "tags": [
                    "dataset"
                ],
                "summary": "Edit Row",
                "description": "Edit a row of Data to a DataSet",
                "operationId": "dataSetDataEdit",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "rowId",
                        "in": "path",
                        "description": "The Row ID of the Data to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dataSetColumnId_ID",
                        "in": "formData",
                        "description": "Parameter for each dataSetColumnId in the DataSet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dataset"
                ],
                "summary": "Delete Row",
                "description": "Delete a row of Data to a DataSet",
                "operationId": "dataSetDataDelete",
                "parameters": [
                    {
                        "name": "dataSetId",
                        "in": "path",
                        "description": "The DataSet ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "rowId",
                        "in": "path",
                        "description": "The Row ID of the Data to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/display": {
            "get": {
                "tags": [
                    "display"
                ],
                "summary": "Display Search",
                "description": "Search Displays for this User",
                "operationId": "displaySearch",
                "parameters": [
                    {
                        "name": "displayId",
                        "in": "formData",
                        "description": "Filter by Display Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupId",
                        "in": "formData",
                        "description": "Filter by DisplayGroup Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "display",
                        "in": "formData",
                        "description": "Filter by Display Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macAddress",
                        "in": "formData",
                        "description": "Filter by Mac Address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hardwareKey",
                        "in": "formData",
                        "description": "Filter by Hardware Key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "clientVersion",
                        "in": "formData",
                        "description": "Filter by Client Version",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Display"
                            }
                        }
                    }
                }
            }
        },
        "/display/{displayId}": {
            "put": {
                "tags": [
                    "display"
                ],
                "summary": "Display Edit",
                "description": "Edit a Display",
                "operationId": "displayEdit",
                "parameters": [
                    {
                        "name": "displayId",
                        "in": "path",
                        "description": "The Display ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "display",
                        "in": "formData",
                        "description": "The Display Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description of the Display",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isAuditing",
                        "in": "formData",
                        "description": "Flag indicating whether this Display records auditing information.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "defaultLayoutId",
                        "in": "formData",
                        "description": "A Layout ID representing the Default Layout for this Display.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "licensed",
                        "in": "formData",
                        "description": "Flag indicating whether this display is licensed.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "license",
                        "in": "formData",
                        "description": "The hardwareKey to use as the licence key for this Display",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "incSchedule",
                        "in": "formData",
                        "description": "Flag indicating whether the Default Layout should be included in the Schedule",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "emailAlert",
                        "in": "formData",
                        "description": "Flag indicating whether the Display generates up/down email alerts.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "alertTimeout",
                        "in": "formData",
                        "description": "How long in seconds should this display wait before alerting when it hasn't connected. Override for the collection interval.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "wakeOnLanEnabled",
                        "in": "formData",
                        "description": "Flag indicating if Wake On LAN is enabled for this Display",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "wakeOnLanTime",
                        "in": "formData",
                        "description": "A h:i string representing the time that the Display should receive its Wake on LAN command",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "broadCastAddress",
                        "in": "formData",
                        "description": "The BroadCast Address for this Display - used by Wake On LAN",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "secureOn",
                        "in": "formData",
                        "description": "The secure on configuration for this Display",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cidr",
                        "in": "formData",
                        "description": "The CIDR configuration for this Display",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "latitude",
                        "in": "formData",
                        "description": "The Latitude of this Display",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "longitude",
                        "in": "formData",
                        "description": "The Longitude of this Display",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "displayProfileId",
                        "in": "formData",
                        "description": "The Display Settings Profile ID",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "clearCachedData",
                        "in": "formData",
                        "description": "Clear all Cached data for this display",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Display"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "display"
                ],
                "summary": "Display Delete",
                "description": "Delete a Display",
                "operationId": "displayDelete",
                "parameters": [
                    {
                        "name": "displayId",
                        "in": "path",
                        "description": "The Display ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/display/requestscreenshot/{displayId}": {
            "put": {
                "tags": [
                    "display"
                ],
                "summary": "Request Screen Shot",
                "description": "Notify the display that the CMS would like a screen shot to be sent.",
                "operationId": "displayRequestScreenshot",
                "parameters": [
                    {
                        "name": "displayId",
                        "in": "path",
                        "description": "The Display ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Display"
                        }
                    }
                }
            }
        },
        "/display/wol/{displayId}": {
            "post": {
                "tags": [
                    "display"
                ],
                "summary": "Issue WOL",
                "description": "Send a Wake On LAN packet to this Display",
                "operationId": "displayWakeOnLan",
                "parameters": [
                    {
                        "name": "displayId",
                        "in": "path",
                        "description": "The Display ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup": {
            "get": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Get Display Groups",
                "operationId": "displayGroupSearch",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "formData",
                        "description": "Filter by DisplayGroup Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroup",
                        "in": "formData",
                        "description": "Filter by DisplayGroup Name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DisplayGroup"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "description": "The total number of records",
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Add a Display Group",
                "description": "Add a new Display Group to the CMS",
                "operationId": "displayGroupAdd",
                "parameters": [
                    {
                        "name": "displayGroup",
                        "in": "formData",
                        "description": "The Display Group Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The Display Group Description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDynamic",
                        "in": "formData",
                        "description": "Flag indicating whether this DisplayGroup is Dynamic",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dynamicContent",
                        "in": "formData",
                        "description": "The filter criteria for this dynamic group. A command separated set of regular expressions to apply",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DisplayGroup"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new DisplayGroup",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}": {
            "put": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Edit a Display Group",
                "description": "Edit an existing Display Group identified by its Id",
                "operationId": "displayGroupEdit",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The displayGroupId to edit.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroup",
                        "in": "formData",
                        "description": "The Display Group Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The Display Group Description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDynamic",
                        "in": "formData",
                        "description": "Flag indicating whether this DisplayGroup is Dynamic",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "dynamicCriteria",
                        "in": "formData",
                        "description": "The filter criteria for this dynamic group. A command separated set of regular expressions to apply",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DisplayGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Delete a Display Group",
                "description": "Delete an existing Display Group identified by its Id",
                "operationId": "displayGroupDelete",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The displayGroupId to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/display/assign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Assign one or more Displays to a Display Group",
                "description": "Adds the provided Displays to the Display Group",
                "operationId": "displayGroupDisplayAssign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to assign to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayId",
                        "in": "formData",
                        "description": "The Display Ids to assign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "unassignDisplayId",
                        "in": "formData",
                        "description": "An optional array of Display IDs to unassign",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/display/unassign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Unassigns one or more Displays to a Display Group",
                "description": "Removes the provided Displays from the Display Group",
                "operationId": "displayGroupDisplayUnassign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to unassign from",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayId",
                        "in": "formData",
                        "description": "The Display Ids to unassign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/displayGroup/assign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Assign one or more DisplayGroups to a Display Group",
                "description": "Adds the provided DisplayGroups to the Display Group",
                "operationId": "displayGroupDisplayGroupAssign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to assign to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupId",
                        "in": "formData",
                        "description": "The displayGroup Ids to assign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "unassignDisplayGroupId",
                        "in": "formData",
                        "description": "An optional array of displayGroup IDs to unassign",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/displayGroup/unassign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Unassigns one or more DisplayGroups to a Display Group",
                "description": "Removes the provided DisplayGroups from the Display Group",
                "operationId": "displayGroupDisplayGroupUnassign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to unassign from",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupId",
                        "in": "formData",
                        "description": "The DisplayGroup Ids to unassign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/media/assign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Assign one or more Media items to a Display Group",
                "description": "Adds the provided Media to the Display Group",
                "operationId": "displayGroupMediaAssign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to assign to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "mediaId",
                        "in": "formData",
                        "description": "The Media Ids to assign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "unassignMediaId",
                        "in": "formData",
                        "description": "Optional array of Media Id to unassign",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/media/unassign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Unassign one or more Media items from a Display Group",
                "description": "Removes the provided from the Display Group",
                "operationId": "displayGroupMediaUnassign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to unassign from",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "mediaId",
                        "in": "formData",
                        "description": "The Media Ids to unassign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/layout/assign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Assign one or more Layouts items to a Display Group",
                "description": "Adds the provided Layouts to the Display Group",
                "operationId": "displayGroupLayoutsAssign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to assign to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "The Layouts Ids to assign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "unassignLayoutsId",
                        "in": "formData",
                        "description": "Optional array of Layouts Id to unassign",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/layout/unassign": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Unassign one or more Layout items from a Display Group",
                "description": "Removes the provided from the Display Group",
                "operationId": "displayGroupLayoutUnassign",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group to unassign from",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "The Layout Ids to unassign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/version": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Set the Version for this Display",
                "description": "Sets the version instructions on all Displays in the Group",
                "operationId": "displayGroupDisplayVersion",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "mediaId",
                        "in": "formData",
                        "description": "The Media Id of the Installer File",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/action/collectNow": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Action: Collect Now",
                "description": "Send the collect now action to this DisplayGroup",
                "operationId": "displayGroupActionCollectNow",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The display group id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/action/changeLayout": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Action: Change Layout",
                "description": "Send the change layout action to this DisplayGroup",
                "operationId": "displayGroupActionChangeLayout",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "The Layout Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration in seconds for this Layout change to remain in effect",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "downloadRequired",
                        "in": "formData",
                        "description": "Flag indicating whether the player should perform a collect before playing the Layout",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "changeMode",
                        "in": "formData",
                        "description": "Whether to queue or replace with this action",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/action/revertToSchedule": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Action: Revert to Schedule",
                "description": "Send the revert to schedule action to this DisplayGroup",
                "operationId": "displayGroupActionRevertToSchedule",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The display group id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/action/overlayLayout": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Action: Overlay Layout",
                "description": "Send the overlay layout action to this DisplayGroup",
                "operationId": "displayGroupActionOverlayLayout",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The Display Group Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "The Layout Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration in seconds for this Overlay to remain in effect",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "downloadRequired",
                        "in": "formData",
                        "description": "Flag indicating whether the player should perform a collect before adding the Overlay",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displaygroup/{displayGroupId}/action/command": {
            "post": {
                "tags": [
                    "displayGroup"
                ],
                "summary": "Send Command",
                "description": "Send a predefined command to this Group of Displays",
                "operationId": "displayGroupActionCommand",
                "parameters": [
                    {
                        "name": "displayGroupId",
                        "in": "path",
                        "description": "The display group id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "commandId",
                        "in": "formData",
                        "description": "The Command Id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/displayprofile": {
            "get": {
                "tags": [
                    "displayprofile"
                ],
                "summary": "Display Profile Search",
                "description": "Search this users Display Profiles",
                "operationId": "displayProfileSearch",
                "parameters": [
                    {
                        "name": "displayProfileId",
                        "in": "formData",
                        "description": "Filter by DisplayProfile Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "displayProfile",
                        "in": "formData",
                        "description": "Filter by DisplayProfile Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Filter by DisplayProfile Type (windows|android)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DisplayProfile"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "displayprofile"
                ],
                "summary": "Add Display Profile",
                "description": "Add a Display Profile",
                "operationId": "displayProfileAdd",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The Name of the Display Profile",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "The Client Type this Profile will apply to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isDefault",
                        "in": "formData",
                        "description": "Flag indicating if this is the default profile for the client type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DisplayProfile"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/displayprofile/{displayProfileId}": {
            "put": {
                "tags": [
                    "displayprofile"
                ],
                "summary": "Edit Display Profile",
                "description": "Edit a Display Profile",
                "operationId": "displayProfileEdit",
                "parameters": [
                    {
                        "name": "displayProfileId",
                        "in": "path",
                        "description": "The Display Profile ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The Name of the Display Profile",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "The Client Type this Profile will apply to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isDefault",
                        "in": "formData",
                        "description": "Flag indicating if this is the default profile for the client type",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DisplayProfile"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "displayprofile"
                ],
                "summary": "Delete Display Profile",
                "description": "Delete an existing Display Profile",
                "operationId": "displayProfileDelete",
                "parameters": [
                    {
                        "name": "displayProfileId",
                        "in": "path",
                        "description": "The Display Profile ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/layout": {
            "get": {
                "tags": [
                    "layout"
                ],
                "summary": "Search Layouts",
                "description": "Search for Layouts viewable by this user",
                "operationId": "layoutSearch",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "Filter by Layout Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "layout",
                        "in": "formData",
                        "description": "Filter by partial Layout name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "formData",
                        "description": "Filter by user Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "retired",
                        "in": "formData",
                        "description": "Filter by retired flag",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "tags",
                        "in": "formData",
                        "description": "Filter by Tags",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "embed",
                        "in": "formData",
                        "description": "Embed related data such as regions, playlists, tags, etc",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Layout"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Add a Layout",
                "description": "Add a new Layout to the CMS",
                "operationId": "layoutAdd",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The layout name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The layout description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "If the Layout should be created with a Template, provide the ID, otherwise don't provide",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "resolutionId",
                        "in": "formData",
                        "description": "If a Template is not provided, provide the resolutionId for this Layout.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/layout/{layoutId}": {
            "put": {
                "tags": [
                    "layout"
                ],
                "summary": "Edit Layout",
                "description": "Edit a Layout",
                "operationId": "layoutEdit",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The Layout Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The Layout Description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "formData",
                        "description": "A comma separated list of Tags",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retired",
                        "in": "formData",
                        "description": "A flag indicating whether this Layout is retired.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "backgroundColor",
                        "in": "formData",
                        "description": "A HEX color to use as the background color of this Layout.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backgroundImageId",
                        "in": "formData",
                        "description": "A media ID to use as the background image for this Layout.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "backgroundzIndex",
                        "in": "formData",
                        "description": "The Layer Number to use for the background.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "resolutionId",
                        "in": "formData",
                        "description": "The Resolution ID to use on this Layout.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "layout"
                ],
                "summary": "Delete Layout",
                "description": "Delete a Layout",
                "operationId": "layoutDelete",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout ID to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/layout/retire/{layoutId}": {
            "put": {
                "tags": [
                    "layout"
                ],
                "summary": "Retire Layout",
                "description": "Retire a Layout so that it isn't available to Schedule. Existing Layouts will still be played",
                "operationId": "layoutRetire",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/layout/copy/{layoutId}": {
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Copy Layout",
                "description": "Copy a Layout, providing a new name if applicable",
                "operationId": "layoutCopy",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout ID to Copy",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The name for the new Layout",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The Description for the new Layout",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "copyMediaFiles",
                        "in": "formData",
                        "description": "Flag indicating whether to make new Copies of all Media Files assigned to the Layout being Copied",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/layout/{layoutId}/tag": {
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Tag Layout",
                "description": "Tag a Layout with one or more tags",
                "operationId": "layoutTag",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout Id to Tag",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "An array of tags",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "layout"
                ],
                "summary": "Untag Layout",
                "description": "Untag a Layout with one or more tags",
                "operationId": "layoutUntag",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout Id to Untag",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "An array of tags",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        }
                    }
                }
            }
        },
        "/layout/status/{layoutId}": {
            "get": {
                "tags": [
                    "layout"
                ],
                "summary": "Layout Status",
                "description": "Calculate the Layout status and return a Layout",
                "operationId": "layoutStatus",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout Id to Untag",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        }
                    }
                }
            }
        },
        "/library": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Library Search",
                "description": "Search the Library for this user",
                "operationId": "librarySearch",
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "formData",
                        "description": "Filter by Media Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "media",
                        "in": "formData",
                        "description": "Filter by Media Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Filter by Media Type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ownerId",
                        "in": "formData",
                        "description": "Filter by Owner Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "retired",
                        "in": "formData",
                        "description": "Filter by Retired",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "Filter by Duration - a number or less-than,greater-than,less-than-equal or great-than-equal followed by a | followed by a number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileSize",
                        "in": "formData",
                        "description": "Filter by File Size - a number or less-than,greater-than,less-than-equal or great-than-equal followed by a | followed by a number",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Media"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "library"
                ],
                "summary": "Add Media",
                "description": "Add Media to the Library",
                "operationId": "libraryAdd",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The Uploaded File",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/library/{mediaId}": {
            "put": {
                "tags": [
                    "library"
                ],
                "summary": "Edit Media",
                "description": "Edit a Media Item in the Library",
                "operationId": "libraryEdit",
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "The Media ID to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Media Item Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "The duration in seconds for this Media Item",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "retired",
                        "in": "formData",
                        "description": "Flag indicating if this Layout is retired",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "tags",
                        "in": "formData",
                        "description": "Comma separated list of Tags",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "updateInLayouts",
                        "in": "formData",
                        "description": "Flag indicating whether to update the duration in all Layouts the Media is assigned to",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Media"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "library"
                ],
                "summary": "Delete Media",
                "description": "Delete Media from the Library",
                "operationId": "libraryDelete",
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "The Media ID to Delete",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "forceDelete",
                        "in": "formData",
                        "description": "If the media item has been used should it be force removed from items that uses it?",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/library/tidy": {
            "post": {
                "tags": [
                    "library"
                ],
                "summary": "Tidy Library",
                "description": "Routine tidy of the library, removing unused files.",
                "operationId": "libraryTidy",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/library/download/{mediaId}/{type}": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Download Media",
                "description": "Download a Media file from the Library",
                "operationId": "libraryDownload",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "The Media ID to Download",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The Module Type of the Download",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "X-Sendfile": {
                                "description": "Apache Send file header - if enabled.",
                                "type": "string"
                            },
                            "X-Accel-Redirect": {
                                "description": "nginx send file header - if enabled.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/media/{mediaId}/tag": {
            "post": {
                "tags": [
                    "media"
                ],
                "summary": "Tag Media",
                "description": "Tag a Media with one or more tags",
                "operationId": "mediaTag",
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "The Media Id to Tag",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "An array of tags",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Media"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "media"
                ],
                "summary": "Untag Media",
                "description": "Untag a Media with one or more tags",
                "operationId": "mediaUntag",
                "parameters": [
                    {
                        "name": "mediaId",
                        "in": "path",
                        "description": "The Media Id to Untag",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "An array of tags",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Media"
                        }
                    }
                }
            }
        },
        "/about": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "About",
                "description": "Information about this API, such as Version code, etc",
                "operationId": "about",
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "title": "version",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "notification"
                ],
                "summary": "Notification Search",
                "description": "Search this users Notifications",
                "operationId": "notificationSearch",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "formData",
                        "description": "Filter by Notification Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "subject",
                        "in": "formData",
                        "description": "Filter by Subject",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "notification"
                ],
                "summary": "Notification Add",
                "description": "Add a Notification",
                "operationId": "notificationAdd",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "formData",
                        "description": "The Subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The Body",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "releaseDt",
                        "in": "formData",
                        "description": "ISO date representing the release date for this notification",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isEmail",
                        "in": "formData",
                        "description": "Flag indicating whether this notification should be emailed.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isInterrupt",
                        "in": "formData",
                        "description": "Flag indication whether this notification should interrupt the web portal nativation/login",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupIds",
                        "in": "formData",
                        "description": "The display group ids to assign this notification to",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userGroupId",
                        "in": "formData",
                        "description": "The user group ids to assign to this notification",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notification/{notificationId}": {
            "post": {
                "tags": [
                    "notification"
                ],
                "summary": "Notification Edit",
                "description": "Edit a Notification",
                "operationId": "notificationEdit",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "The NotificationId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "subject",
                        "in": "formData",
                        "description": "The Subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "The Body",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "releaseDt",
                        "in": "formData",
                        "description": "ISO date representing the release date for this notification",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isEmail",
                        "in": "formData",
                        "description": "Flag indicating whether this notification should be emailed.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isInterrupt",
                        "in": "formData",
                        "description": "Flag indication whether this notification should interrupt the web portal nativation/login",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupIds",
                        "in": "formData",
                        "description": "The display group ids to assign this notification to",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userGroupId",
                        "in": "formData",
                        "description": "The user group ids to assign to this notification",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "notification"
                ],
                "summary": "Delete Notification",
                "description": "Delete the provided notification",
                "operationId": "notificationDelete",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "The Notification Id to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/playlist/widget": {
            "get": {
                "tags": [
                    "playlist"
                ],
                "summary": "Playlist Widget Search",
                "description": "Search widgets on a Playlist",
                "operationId": "playlistSearch",
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "formData",
                        "description": "The Playlist ID to Search",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        }
                    }
                }
            }
        },
        "/playlist/library/assign/{playlistId}": {
            "post": {
                "tags": [
                    "playlist"
                ],
                "summary": "Assign Library Items",
                "description": "Assign Media from the Library to this Playlist",
                "operationId": "playlistLibraryAssign",
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "description": "The Playlist ID to assign to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "media",
                        "in": "formData",
                        "description": "Array of Media IDs to assign",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "duration",
                        "in": "formData",
                        "description": "Optional duration for all Media in this assignment to use on the Widget",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Playlist"
                        }
                    }
                }
            }
        },
        "/region/{id}": {
            "put": {
                "tags": [
                    "layout"
                ],
                "summary": "Edit Region",
                "description": "Edit Region",
                "operationId": "regionEdit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Region ID to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "width",
                        "in": "formData",
                        "description": "The Width, default 250",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "height",
                        "in": "formData",
                        "description": "The Height",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "top",
                        "in": "formData",
                        "description": "The Top Coordinate",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "left",
                        "in": "formData",
                        "description": "The Left Coordinate",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "zIndex",
                        "in": "formData",
                        "description": "The Layer for this Region",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "transitionType",
                        "in": "formData",
                        "description": "The Transition Type. Must be a valid transition code as returned by /transition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transitionDuration",
                        "in": "formData",
                        "description": "The transition duration in milliseconds if required by the transition type",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "transitionDirection",
                        "in": "formData",
                        "description": "The transition direction if required by the transition type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "loop",
                        "in": "formData",
                        "description": "Flag indicating whether this region should loop if there is only 1 media item in the timeline",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Add Region",
                "description": "Add a Region to a Layout",
                "operationId": "regionAdd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Layout ID to add the Region to",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "width",
                        "in": "formData",
                        "description": "The Width, default 250",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "height",
                        "in": "formData",
                        "description": "The Height",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "top",
                        "in": "formData",
                        "description": "The Top Coordinate",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "left",
                        "in": "formData",
                        "description": "The Left Coordinate",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/region/{regionId}": {
            "delete": {
                "tags": [
                    "layout"
                ],
                "summary": "Region Delete",
                "description": "Delete an existing region",
                "operationId": "regionDelete",
                "parameters": [
                    {
                        "name": "regionId",
                        "in": "path",
                        "description": "The Region ID to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/region/position/all/{layoutId}": {
            "put": {
                "tags": [
                    "layout"
                ],
                "summary": "Position Regions",
                "description": "Position all regions for a Layout",
                "operationId": "regionPositionAll",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "regions",
                        "in": "formData",
                        "description": "Array of regions and their new positions. Each array element should ne json encoded and have regionId, top, left, width and height.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        }
                    }
                }
            }
        },
        "/resolution": {
            "get": {
                "tags": [
                    "resolution"
                ],
                "summary": "Resolution Search",
                "description": "Search Resolutions this user has access to",
                "operationId": "resolutionSearch",
                "parameters": [
                    {
                        "name": "resolutionId",
                        "in": "formData",
                        "description": "Filter by Resolution Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "resolution",
                        "in": "formData",
                        "description": "Filter by Resolution Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "in": "formData",
                        "description": "Filter by Enabled",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resolution"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "resolution"
                ],
                "summary": "Add Resolution",
                "description": "Add new Resolution",
                "operationId": "resolutionAdd",
                "parameters": [
                    {
                        "name": "resolution",
                        "in": "formData",
                        "description": "A name for the Resolution",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "width",
                        "in": "formData",
                        "description": "The Display Width of the Resolution",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "height",
                        "in": "formData",
                        "description": "The Display Height of the Resolution",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Resolution"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resolution/{resolutionId}": {
            "put": {
                "tags": [
                    "resolution"
                ],
                "summary": "Edit Resolution",
                "description": "Edit new Resolution",
                "operationId": "resolutionEdit",
                "parameters": [
                    {
                        "name": "resolutionId",
                        "in": "path",
                        "description": "The Resolution ID to Edit",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "resolution",
                        "in": "formData",
                        "description": "A name for the Resolution",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "width",
                        "in": "formData",
                        "description": "The Display Width of the Resolution",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "height",
                        "in": "formData",
                        "description": "The Display Height of the Resolution",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Resolution"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolution"
                ],
                "summary": "Delete Resolution",
                "description": "Delete Resolution",
                "operationId": "resolutionDelete",
                "parameters": [
                    {
                        "name": "resolutionId",
                        "in": "path",
                        "description": "The Resolution ID to Delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/schedule/data/events": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "summary": "Generates the calendar that we draw events on",
                "operationId": "scheduleCalendarData",
                "parameters": [
                    {
                        "name": "DisplayGroupIds",
                        "in": "formData",
                        "description": "The DisplayGroupIds to return the schedule for. Empty for All.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "From Date Timestamp in Microseconds",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "To Date Timestamp in Microseconds",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleCalendarData"
                            }
                        }
                    }
                }
            }
        },
        "/schedule": {
            "post": {
                "tags": [
                    "schedule"
                ],
                "summary": "Add Schedule Event",
                "description": "Add a new scheduled event for a Campaign/Layout to be shown on a Display Group/Display.",
                "operationId": "scheduleAdd",
                "parameters": [
                    {
                        "name": "eventTypeId",
                        "in": "formData",
                        "description": "The Event Type Id to use for this Event. 1=Campaign, 2=Command",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "campaignId",
                        "in": "formData",
                        "description": "The Campaign ID to use for this Event. If a Layout is needed then the Campaign specific ID for that Layout should be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commandId",
                        "in": "formData",
                        "description": "The Command ID to use for this Event.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "displayOrder",
                        "in": "formData",
                        "description": "The display order for this event. ",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isPriority",
                        "in": "formData",
                        "description": "An integer indicating the priority of this event. Normal events have a priority of 0.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupIds",
                        "in": "formData",
                        "description": "The Display Group IDs for this event. Display specific Group IDs should be used to schedule on single displays.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dayPartId",
                        "in": "formData",
                        "description": "The Day Part for this event. Currently supported are 0(custom) and 1(always). Defaulted to 0.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "fromDt",
                        "in": "formData",
                        "description": "The from date for this event.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "toDt",
                        "in": "formData",
                        "description": "The to date for this event.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "recurrenceType",
                        "in": "formData",
                        "description": "The type of recurrence to apply to this event.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "",
                            "Minute",
                            "Hour",
                            "Day",
                            "Week",
                            "Month",
                            "Year"
                        ]
                    },
                    {
                        "name": "recurrenceDetail",
                        "in": "formData",
                        "description": "The interval for the recurrence.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "recurrenceRange",
                        "in": "formData",
                        "description": "The end date for this events recurrence.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "recurrenceRepeatsOn",
                        "in": "formData",
                        "description": "The days of the week that this event repeats - weekly only",
                        "required": false,
                        "type": "string",
                        "format": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/{eventId}": {
            "put": {
                "tags": [
                    "schedule"
                ],
                "summary": "Edit Schedule Event",
                "description": "Edit a scheduled event for a Campaign/Layout to be shown on a Display Group/Display.",
                "operationId": "scheduleEdit",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "The Scheduled Event ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "eventTypeId",
                        "in": "formData",
                        "description": "The Event Type Id to use for this Event. 1=Campaign, 2=Command",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "campaignId",
                        "in": "formData",
                        "description": "The Campaign ID to use for this Event. If a Layout is needed then the Campaign specific ID for that Layout should be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commandId",
                        "in": "formData",
                        "description": "The Command ID to use for this Event.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "displayOrder",
                        "in": "formData",
                        "description": "The display order for this event. ",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "isPriority",
                        "in": "formData",
                        "description": "An integer indicating the priority of this event. Normal events have a priority of 0.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "displayGroupIds",
                        "in": "formData",
                        "description": "The Display Group IDs for this event. Display specific Group IDs should be used to schedule on single displays.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dayPartId",
                        "in": "formData",
                        "description": "The Day Part for this event. Currently supported are 0(custom) and 1(always). Defaulted to 0.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "fromDt",
                        "in": "formData",
                        "description": "The from date for this event.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "toDt",
                        "in": "formData",
                        "description": "The to date for this event.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "recurrenceType",
                        "in": "formData",
                        "description": "The type of recurrence to apply to this event.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "",
                            "Minute",
                            "Hour",
                            "Day",
                            "Week",
                            "Month",
                            "Year"
                        ]
                    },
                    {
                        "name": "recurrenceDetail",
                        "in": "formData",
                        "description": "The interval for the recurrence.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "recurrenceRange",
                        "in": "formData",
                        "description": "The end date for this events recurrence.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "recurrenceRepeatsOn",
                        "in": "formData",
                        "description": "The days of the week that this event repeats - weekly only",
                        "required": false,
                        "type": "string",
                        "format": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "schedule"
                ],
                "summary": "Delete Event",
                "description": "Delete a Scheduled Event",
                "operationId": "scheduleDelete",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "The Scheduled Event ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "operationId": "statsSearch",
                "parameters": [
                    {
                        "name": "fromDt",
                        "in": "formData",
                        "description": "The start date for the filter. Default = 24 hours ago",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toDt",
                        "in": "formData",
                        "description": "The end date for the filter. Default = now.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "displayId",
                        "in": "formData",
                        "description": "An optional display Id to filter",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "layoutId",
                        "in": "formData",
                        "description": "An optional array of layout Id to filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mediaId",
                        "in": "formData",
                        "description": "An optional array of media Id to filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StatisticsData"
                            }
                        }
                    }
                }
            }
        },
        "/template": {
            "get": {
                "tags": [
                    "template"
                ],
                "summary": "Template Search",
                "description": "Search templates this user has access to",
                "operationId": "templateSearch",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Layout"
                            }
                        }
                    }
                }
            }
        },
        "/template/{layoutId}": {
            "post": {
                "tags": [
                    "template"
                ],
                "summary": "Add a template from a Layout",
                "description": "Use the provided layout as a base for a new template",
                "operationId": "template.add.from.layout",
                "parameters": [
                    {
                        "name": "layoutId",
                        "in": "path",
                        "description": "The Layout ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "includeWidgets",
                        "in": "formData",
                        "description": "Flag indicating whether to include the widgets in the Template",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "The Template Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "formData",
                        "description": "Comma separated list of Tags for the template",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "A description of the Template",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Layout"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Me",
                "description": "Get my details",
                "operationId": "userMe",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "User Search",
                "description": "Search users",
                "operationId": "userSearch",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "formData",
                        "description": "Filter by User Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "userName",
                        "in": "formData",
                        "description": "Filter by User Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userTypeId",
                        "in": "formData",
                        "description": "Filter by UserType Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "retired",
                        "in": "formData",
                        "description": "Filter by Retired",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Add User",
                "description": "Add a new User",
                "operationId": "userAdd",
                "parameters": [
                    {
                        "name": "userName",
                        "in": "formData",
                        "description": "The User Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "The user email address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "userTypeId",
                        "in": "formData",
                        "description": "The user type ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "homePageId",
                        "in": "formData",
                        "description": "The homepage to use for this User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "libraryQuota",
                        "in": "formData",
                        "description": "The users library quota in kilobytes",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "The users password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "formData",
                        "description": "The inital user group for this User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "firstName",
                        "in": "formData",
                        "description": "The users first name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "formData",
                        "description": "The users last name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "The users phone number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ref1",
                        "in": "formData",
                        "description": "Reference 1",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ref2",
                        "in": "formData",
                        "description": "Reference 2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ref3",
                        "in": "formData",
                        "description": "Reference 3",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ref4",
                        "in": "formData",
                        "description": "Reference 4",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ref5",
                        "in": "formData",
                        "description": "Reference 5",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/permissions/{entity}/{objectId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Permission Data",
                "description": "Permission data for the Entity and Object Provided.",
                "operationId": "userPermissionsSearch",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "The Entity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "The ID of the Object to return permissions for",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Permission"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Permission Set",
                "description": "Set Permissions to users/groups for the provided entity.",
                "operationId": "userPermissionsSet",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "The Entity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "The ID of the Object to set permissions on",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "groupIds",
                        "in": "formData",
                        "description": "Array of permissions with groupId as the key",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/pref": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Retrieve User Preferences",
                "description": "User preferences for non-state information, such as Layout designer zoom levels",
                "operationId": "userPrefGet",
                "parameters": [
                    {
                        "name": "preference",
                        "in": "formData",
                        "description": "An optional preference",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserOption"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Save User Preferences",
                "description": "Save User preferences for non-state information, such as Layout designer zoom levels",
                "operationId": "userPrefEdit",
                "parameters": [
                    {
                        "name": "preference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserOption"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/usergroup": {
            "get": {
                "tags": [
                    "usergroup"
                ],
                "summary": "UserGroup Search",
                "description": "Search User Groups",
                "operationId": "userGroupSearch",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "formData",
                        "description": "Filter by UserGroup Id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "userGroup",
                        "in": "formData",
                        "description": "Filter by UserGroup Name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserGroup"
                            }
                        }
                    }
                }
            }
        },
        "/group/{userGroupId}/copy": {
            "post": {
                "tags": [
                    "usergroup"
                ],
                "summary": "Copy User Group",
                "description": "Copy an user group, optionally copying the group members",
                "operationId": "userGroupCopy",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The User Group ID to Copy",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "group",
                        "in": "formData",
                        "description": "The Group Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "copyMembers",
                        "in": "formData",
                        "description": "Flag indicating whether to copy group members",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location of the new record",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ScheduleCalendarData": {
            "properties": {
                "id": {
                    "description": "Event ID",
                    "type": "integer"
                },
                "title": {
                    "description": "Event Title",
                    "type": "string"
                },
                "sameDay": {
                    "description": "Does this event happen only on 1 day",
                    "type": "integer"
                },
                "event": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "StatisticsData": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "layout": {
                    "type": "string"
                },
                "media": {
                    "type": "string"
                },
                "numberPlays": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "minStart": {
                    "type": "string"
                },
                "maxEnd": {
                    "type": "string"
                }
            }
        },
        "Application": {
            "properties": {
                "key": {
                    "description": "Application Key",
                    "type": "string"
                },
                "secret": {
                    "description": "Private Secret Key",
                    "type": "string"
                },
                "name": {
                    "description": "Application Name",
                    "type": "string"
                },
                "expires": {
                    "description": "Application Session Expiry",
                    "type": "integer"
                },
                "userId": {
                    "description": "The Owner of this Application",
                    "type": "integer"
                },
                "authCode": {
                    "description": "Flag indicating whether to allow the authorizationCode Grant Type",
                    "type": "integer"
                },
                "clientCredentials": {
                    "description": "Flag indicating whether to allow the clientCredentials Grant Type",
                    "type": "integer"
                }
            }
        },
        "AuditLog": {
            "properties": {
                "logId": {
                    "description": "The Log Id",
                    "type": "integer"
                },
                "logDate": {
                    "description": "The Log Date",
                    "type": "integer"
                },
                "userId": {
                    "description": "The userId of the User that took this action",
                    "type": "integer"
                },
                "message": {
                    "description": "Message describing the action taken",
                    "type": "string"
                },
                "entity": {
                    "description": "The effected entity",
                    "type": "string"
                },
                "entityId": {
                    "description": "The effected entityId",
                    "type": "integer"
                },
                "objectAfter": {
                    "description": "A JSON representation of the object after it was changed",
                    "type": "string"
                },
                "userName": {
                    "description": "The User Name of the User that took this action",
                    "type": "string"
                }
            }
        },
        "Campaign": {
            "properties": {
                "campaignId": {
                    "description": "The Campaign Id",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The userId of the User that owns this Campaign",
                    "type": "integer"
                },
                "campaign": {
                    "description": "The name of the Campaign",
                    "type": "string"
                },
                "isLayoutSpecific": {
                    "description": "A 0|1 flag to indicate whether this is a Layout specific Campaign or not.",
                    "type": "integer"
                },
                "numberLayouts": {
                    "description": "The number of Layouts associated with this Campaign",
                    "type": "integer"
                },
                "totalDuration": {
                    "description": "The total duration of the campaign (sum of layout's durations)",
                    "type": "integer"
                }
            }
        },
        "Command": {
            "properties": {
                "commandId": {
                    "description": "Command Id",
                    "type": "integer"
                },
                "command": {
                    "description": "Command Name",
                    "type": "string"
                },
                "code": {
                    "description": "Unique Code",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "userId": {
                    "description": "User Id",
                    "type": "integer"
                },
                "commandString": {
                    "description": "Command String - when child of a Display Profile",
                    "type": "string"
                },
                "validationString": {
                    "description": "Validation String - when child of a Display Profile",
                    "type": "string"
                }
            }
        },
        "DataSet": {
            "properties": {
                "dataSetId": {
                    "description": "The dataSetId",
                    "type": "integer"
                },
                "dataSet": {
                    "description": "The dataSet Name",
                    "type": "string"
                },
                "description": {
                    "description": "The dataSet description",
                    "type": "string"
                },
                "userId": {
                    "description": "The userId of the User that owns this DataSet",
                    "type": "integer"
                },
                "lastDataEdit": {
                    "description": "Timestamp indicating the date/time this DataSet was edited last",
                    "type": "integer"
                },
                "owner": {
                    "description": "The user name of the User that owns this DataSet",
                    "type": "string"
                },
                "groupsWithPermissions": {
                    "description": "A comma separated list of Groups/Users that have permission to this DataSet",
                    "type": "string"
                },
                "code": {
                    "description": "A code for this Data Set",
                    "type": "string"
                },
                "isLookup": {
                    "description": "Flag to indicate whether this DataSet is a lookup table",
                    "type": "integer"
                }
            }
        },
        "DataSetColumn": {
            "properties": {
                "dataSetColumnId": {
                    "description": "The ID of this DataSetColumn",
                    "type": "integer"
                },
                "dataSetId": {
                    "description": "The ID of the DataSet that this Column belongs to",
                    "type": "integer"
                },
                "heading": {
                    "description": "The Column Heading",
                    "type": "string"
                },
                "dataTypeId": {
                    "description": "The ID of the DataType for this Column",
                    "type": "integer"
                },
                "dataSetColumnTypeId": {
                    "description": "The ID of the ColumnType for this Column",
                    "type": "integer"
                },
                "listContent": {
                    "description": "Comma separated list of valid content for drop down columns",
                    "type": "string"
                },
                "columnOrder": {
                    "description": "The order this column should be displayed",
                    "type": "integer"
                },
                "formula": {
                    "description": "A MySQL formula for this column",
                    "type": "string"
                },
                "dataType": {
                    "description": "The data type for this Column",
                    "type": "string"
                },
                "dataSetColumnType": {
                    "description": "The column type for this Column",
                    "type": "string"
                }
            }
        },
        "DataSetColumnType": {
            "properties": {
                "dataSetColumnTypeId": {
                    "description": "The ID for this DataSetColumnType",
                    "type": "integer"
                },
                "dataSetColumnType": {
                    "description": "The name for this DataSetColumnType",
                    "type": "string"
                }
            }
        },
        "DataType": {
            "properties": {
                "dataTypeId": {
                    "description": "The ID for this DataType",
                    "type": "integer"
                },
                "dataType": {
                    "description": "The Name for this DataType",
                    "type": "string"
                }
            }
        },
        "Display": {
            "properties": {
                "displayId": {
                    "description": "The ID of this Display",
                    "type": "integer"
                },
                "auditingUntil": {
                    "description": "Flag indicating whether this Display is recording Auditing Information from XMDS",
                    "type": "integer"
                },
                "display": {
                    "description": "The Name of this Display",
                    "type": "string"
                },
                "description": {
                    "description": "The Description of this Display",
                    "type": "string"
                },
                "defaultLayoutId": {
                    "description": "The ID of the Default Layout",
                    "type": "integer"
                },
                "license": {
                    "description": "The Display Unique Identifier also called hardware key",
                    "type": "string"
                },
                "licensed": {
                    "description": "A flag indicating whether this Display is licensed or not",
                    "type": "integer"
                },
                "loggedIn": {
                    "description": "A flag indicating whether this Display is currently logged in",
                    "type": "integer"
                },
                "lastAccessed": {
                    "description": "A timestamp in CMS time for the last time the Display accessed XMDS",
                    "type": "integer"
                },
                "incSchedule": {
                    "description": "A flag indicating whether the default layout is interleaved with the Schedule",
                    "type": "integer"
                },
                "emailAlert": {
                    "description": "A flag indicating whether the Display will send email alerts.",
                    "type": "integer"
                },
                "alertTimeout": {
                    "description": "A timeout in seconds for the Display to send email alerts.",
                    "type": "integer"
                },
                "clientAddress": {
                    "description": "The MAC Address of the Display",
                    "type": "string"
                },
                "mediaInventoryStatus": {
                    "description": "The media inventory status of the Display",
                    "type": "integer"
                },
                "macAddress": {
                    "description": "The current Mac Address of the Player",
                    "type": "string"
                },
                "lastChanged": {
                    "description": "A timestamp indicating the last time the Mac Address changed",
                    "type": "integer"
                },
                "numberOfMacAddressChanges": {
                    "description": "A count of Mac Address changes",
                    "type": "integer"
                },
                "lastWakeOnLanCommandSent": {
                    "description": "A timestamp indicating the last time a WOL command was sent",
                    "type": "integer"
                },
                "wakeOnLanEnabled": {
                    "description": "A flag indicating whether Wake On Lan is enabled",
                    "type": "integer"
                },
                "wakeOnLanTime": {
                    "description": "A h:i string indicating the time to send a WOL command",
                    "type": "string"
                },
                "broadCastAddress": {
                    "description": "The broad cast address for this Display",
                    "type": "string"
                },
                "secureOn": {
                    "description": "The secureOn WOL settings for this display.",
                    "type": "string"
                },
                "cidr": {
                    "description": "The CIDR WOL settings for this display",
                    "type": "string"
                },
                "latitude": {
                    "description": "The display Latitude",
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "description": "The display longitude",
                    "type": "number",
                    "format": "double"
                },
                "versionInstructions": {
                    "description": "A JSON string representing the player installer that should be installed",
                    "type": "string"
                },
                "clientType": {
                    "description": "A string representing the player type",
                    "type": "string"
                },
                "clientVersion": {
                    "description": "A string representing the player version",
                    "type": "string"
                },
                "clientCode": {
                    "description": "A number representing the Player version code",
                    "type": "integer"
                },
                "displayProfileId": {
                    "description": "The display settings profile ID for this Display",
                    "type": "integer"
                },
                "currentLayoutId": {
                    "description": "The current layout ID reported via XMDS",
                    "type": "integer"
                },
                "screenShotRequested": {
                    "description": "A flag indicating that a screen shot should be taken by the Player",
                    "type": "integer"
                },
                "storageAvailableSpace": {
                    "description": "The number of bytes of storage available on the device.",
                    "type": "integer"
                },
                "storageTotalSpace": {
                    "description": "The number of bytes of storage in total on the device",
                    "type": "integer"
                },
                "displayGroupId": {
                    "description": "The ID of the Display Group for this Device",
                    "type": "integer"
                },
                "currentLayout": {
                    "description": "The current layout",
                    "type": "string"
                },
                "defaultLayout": {
                    "description": "The default layout",
                    "type": "string"
                },
                "displayGroups": {
                    "description": "The Display Groups this Display belongs to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DisplayGroup"
                    }
                },
                "xmrChannel": {
                    "description": "The Player Subscription Channel",
                    "type": "string"
                },
                "xmrPubKey": {
                    "description": "The Player Public Key",
                    "type": "string"
                },
                "lastCommandSuccess": {
                    "description": "The last command success, 0 = failure, 1 = success, 2 = unknown",
                    "type": "integer"
                }
            }
        },
        "DisplayGroup": {
            "properties": {
                "displayGroupId": {
                    "description": "The displayGroup Id",
                    "type": "integer"
                },
                "displayGroup": {
                    "description": "The displayGroup Name",
                    "type": "string"
                },
                "description": {
                    "description": "The displayGroup Description",
                    "type": "string"
                },
                "isDisplaySpecific": {
                    "description": "A flag indicating whether this displayGroup is a single display displayGroup",
                    "type": "integer"
                },
                "isDynamic": {
                    "description": "A flag indicating whether this displayGroup is dynamic",
                    "type": "integer"
                },
                "dynamicCriteria": {
                    "description": "A flag indicating whether this displayGroup is dynamic",
                    "type": "integer"
                },
                "userId": {
                    "description": "The UserId who owns this display group",
                    "type": "integer"
                }
            }
        },
        "DisplayProfile": {
            "properties": {
                "displayProfileId": {
                    "description": "The ID of this Display Profile",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of this Display Profile",
                    "type": "string"
                },
                "type": {
                    "description": "The player type that this Display Profile is for",
                    "type": "string"
                },
                "config": {
                    "description": "The configuration options for this Profile",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDefault": {
                    "description": "A flag indicating if this profile should be used as the Default for the client type",
                    "type": "integer"
                },
                "userId": {
                    "description": "The userId of the User that owns this profile",
                    "type": "integer"
                },
                "configDefault": {
                    "description": "The default configuration options for this Profile",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configTabs": {
                    "description": "Array of tab names to logically group the configuration options",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Help": {
            "properties": {
                "helpId": {
                    "description": "The ID of this Help Record",
                    "type": "integer"
                },
                "topic": {
                    "description": "The topic for this Help Record",
                    "type": "string"
                },
                "category": {
                    "description": "The Category for this Help Record",
                    "type": "string"
                },
                "link": {
                    "description": "The Link to the Manual for this Help Record",
                    "type": "string"
                }
            }
        },
        "Layout": {
            "properties": {
                "layoutId": {
                    "description": "The layoutId",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The userId of the Layout Owner",
                    "type": "integer"
                },
                "campaignId": {
                    "description": "The id of the Layout's dedicated Campaign",
                    "type": "integer"
                },
                "backgroundImageId": {
                    "description": "The id of the image media set as the background",
                    "type": "integer"
                },
                "schemaVersion": {
                    "description": "The XLF schema version",
                    "type": "integer"
                },
                "layout": {
                    "description": "The name of the Layout",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the Layout",
                    "type": "string"
                },
                "backgroundColor": {
                    "description": "A HEX string representing the Layout background color",
                    "type": "string"
                },
                "createdDt": {
                    "description": "The datetime the Layout was created",
                    "type": "string"
                },
                "modifiedDt": {
                    "description": "The datetime the Layout was last modified",
                    "type": "string"
                },
                "status": {
                    "description": "Flag indicating the Layout status",
                    "type": "integer"
                },
                "retired": {
                    "description": "Flag indicating whether the Layout is retired",
                    "type": "integer"
                },
                "backgroundzIndex": {
                    "description": "The Layer that the background should occupy",
                    "type": "integer"
                },
                "width": {
                    "description": "The Layout Width",
                    "type": "number",
                    "format": "double"
                },
                "height": {
                    "description": "The Layout Height",
                    "type": "number",
                    "format": "double"
                },
                "displayOrder": {
                    "description": "If this Layout has been requested by Campaign, then this is the display order of the Layout within the Campaign",
                    "type": "integer"
                },
                "duration": {
                    "description": "A read-only estimate of this Layout's total duration in seconds. This is equal to the longest region duration and is valid when the layout status is 1 or 2.",
                    "type": "integer"
                },
                "statusMessage": {
                    "description": "A status message detailing any errors with the layout",
                    "type": "string"
                }
            }
        },
        "LogEntry": {
            "properties": {
                "logId": {
                    "description": "The Log ID",
                    "type": "integer"
                },
                "runNo": {
                    "description": "A unique run number for a set of Log Messages.",
                    "type": "string"
                },
                "logDate": {
                    "description": "A timestamp representing the CMS date this log message occured",
                    "type": "integer"
                },
                "channel": {
                    "description": "The Channel that generated this message. WEB/API/MAINT/TEST",
                    "type": "string"
                },
                "page": {
                    "description": "The requested route",
                    "type": "string"
                },
                "function": {
                    "description": "The request method, GET/POST/PUT/DELETE",
                    "type": "string"
                },
                "message": {
                    "description": "The log message",
                    "type": "string"
                },
                "displayId": {
                    "description": "The display ID this message relates to or NULL for CMS",
                    "type": "integer"
                },
                "type": {
                    "description": "The Log Level",
                    "type": "string"
                },
                "display": {
                    "description": "The display this message relates to or CMS for CMS.",
                    "type": "string"
                }
            }
        },
        "Media": {
            "properties": {
                "mediaId": {
                    "description": "The Media ID",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The ID of the User that owns this Media",
                    "type": "integer"
                },
                "parentId": {
                    "description": "The Parent ID of this Media if it has been revised",
                    "type": "integer"
                },
                "name": {
                    "description": "The Name of this Media",
                    "type": "string"
                },
                "mediaType": {
                    "description": "The module type of this Media",
                    "type": "integer"
                },
                "storedAs": {
                    "description": "The file name of the media as stored in the library",
                    "type": "string"
                },
                "fileName": {
                    "description": "The original file name as it was uploaded",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags associated with this Media",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "fileSize": {
                    "description": "The file size in bytes",
                    "type": "integer"
                },
                "duration": {
                    "description": "The duration to use when assigning this media to a Layout widget",
                    "type": "integer"
                },
                "valid": {
                    "description": "Flag indicating whether this media is valid.",
                    "type": "integer"
                },
                "moduleSystemFile": {
                    "description": "Flag indicating whether this media is a system file or not",
                    "type": "integer"
                },
                "expires": {
                    "description": "Timestamp indicating when this media should expire",
                    "type": "integer"
                },
                "retired": {
                    "description": "Flag indicating whether this media is retired",
                    "type": "integer"
                },
                "isEdited": {
                    "description": "Flag indicating whether this media has been edited and replaced with a newer file",
                    "type": "integer"
                },
                "md5": {
                    "description": "A MD5 checksum of the stored media file",
                    "type": "string"
                },
                "owner": {
                    "description": "The username of the User that owns this media",
                    "type": "string"
                },
                "groupsWithPermissions": {
                    "description": "A comma separated list of groups/users with permissions to this Media",
                    "type": "string"
                },
                "released": {
                    "description": "A flag indicating whether this media has been released",
                    "type": "integer"
                },
                "apiRef": {
                    "description": "An API reference",
                    "type": "string"
                }
            }
        },
        "Module": {
            "properties": {
                "moduleId": {
                    "description": "The ID of this Module",
                    "type": "integer"
                },
                "name": {
                    "description": "Module Name",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the Module",
                    "type": "string"
                },
                "validExtensions": {
                    "description": "A comma separated list of Valid Extensions",
                    "type": "string"
                },
                "imageUri": {
                    "description": "The file uri of an image to represent this Module",
                    "type": "string"
                },
                "type": {
                    "description": "The type code for this module",
                    "type": "string"
                },
                "enabled": {
                    "description": "A flag indicating whether this module is enabled",
                    "type": "integer"
                },
                "regionSpecific": {
                    "description": "A flag indicating whether this module is specific to a Layout or can be uploaded to the Library",
                    "type": "integer"
                },
                "previewEnabled": {
                    "description": "A flag indicating whether the Layout designer should render a preview of this module",
                    "type": "integer"
                },
                "assignable": {
                    "description": "A flag indicating whether the module is assignable to a Layout",
                    "type": "integer"
                },
                "renderAs": {
                    "description": "A flag indicating whether the module should be rendered natively by the Player or via the CMS (native|html)",
                    "type": "string"
                },
                "defaultDuration": {
                    "description": "The default duration for Widgets of this Module when the user has elected to not set a specific duration.",
                    "type": "integer"
                },
                "settings": {
                    "description": "An array of additional module specific settings",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schemaVersion": {
                    "description": "The schema version of the module",
                    "type": "integer"
                },
                "class": {
                    "description": "Class Name including namespace",
                    "type": "string"
                },
                "viewPath": {
                    "description": "The Twig View path for module specific templates",
                    "type": "string"
                },
                "installName": {
                    "description": "The original installation name of this module.",
                    "type": "string"
                }
            }
        },
        "Notification": {
            "properties": {
                "notificationId": {
                    "description": "The Notifcation ID",
                    "type": "integer"
                },
                "createdDt": {
                    "description": "Create Date as Unix Timestamp",
                    "type": "integer"
                },
                "releaseDt": {
                    "description": "Release Date as Unix Timestamp",
                    "type": "integer"
                },
                "subject": {
                    "description": "The subject line",
                    "type": "string"
                },
                "body": {
                    "description": "The HTML body of the notification",
                    "type": "string"
                },
                "isEmail": {
                    "description": "Should the notification be emailed",
                    "type": "integer"
                },
                "isInterrupt": {
                    "description": "Should the notification interrupt the CMS UI on navigate/login",
                    "type": "integer"
                },
                "isSystem": {
                    "description": "Flag for system notification",
                    "type": "integer"
                },
                "userId": {
                    "description": "The Owner User Id",
                    "type": "integer"
                },
                "userGroups": {
                    "description": "User Group Notifications associated with this notification",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                },
                "displayGroups": {
                    "description": "Display Groups associated with this notification",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DisplayGroup"
                    }
                }
            }
        },
        "Page": {
            "properties": {
                "pageId": {
                    "description": "The ID of the Page",
                    "type": "integer"
                },
                "name": {
                    "description": "A code name for the page",
                    "type": "string"
                },
                "title": {
                    "description": "A user friendly title for this page",
                    "type": "string"
                },
                "asHome": {
                    "description": "Flag indicating if the page can be used as a homepage",
                    "type": "integer"
                }
            }
        },
        "Permission": {
            "properties": {
                "permissionId": {
                    "description": "The ID of this Permission Record",
                    "type": "integer"
                },
                "entityId": {
                    "description": "The Entity ID that this Permission refers to",
                    "type": "integer"
                },
                "groupId": {
                    "description": "The User Group ID that this permission refers to",
                    "type": "integer"
                },
                "objectId": {
                    "description": "The object ID that this permission refers to",
                    "type": "integer"
                },
                "isUser": {
                    "description": "A flag indicating whether the groupId refers to a user specific group",
                    "type": "integer"
                },
                "entity": {
                    "description": "The entity name that this refers to",
                    "type": "string"
                },
                "objectIdString": {
                    "description": "Legacy for when the Object ID is a string",
                    "type": "string"
                },
                "group": {
                    "description": "The group name that this refers to",
                    "type": "string"
                },
                "view": {
                    "description": "A flag indicating whether view permission is granted",
                    "type": "integer"
                },
                "edit": {
                    "description": "A flag indicating whether edit permission is granted",
                    "type": "integer"
                },
                "delete": {
                    "description": "A flag indicating whether delete permission is granted",
                    "type": "integer"
                },
                "modifyPermissions": {
                    "description": "A flag indicating whether modify permission permission is granted.",
                    "type": "integer"
                }
            }
        },
        "Playlist": {
            "properties": {
                "playlistId": {
                    "description": "The ID of this Playlist",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The userId of the User that owns this Playlist",
                    "type": "integer"
                },
                "name": {
                    "description": "The Name of the Playlist",
                    "type": "string"
                },
                "tags": {
                    "description": "An array of Tags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "regions": {
                    "description": "An array of Regions this Playlist is assigned to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "widgets": {
                    "description": "An array of Widgets assigned to this Playlist",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Widget"
                    }
                },
                "permissions": {
                    "description": "An array of permissions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "displayOrder": {
                    "description": "The display order of the Playlist when assigned to a Region",
                    "type": "integer"
                }
            }
        },
        "Region": {
            "properties": {
                "regionId": {
                    "description": "The ID of this region",
                    "type": "integer"
                },
                "layoutId": {
                    "description": "The Layout ID this region belongs to",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The userId of the User that owns this Region",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of this Region",
                    "type": "string"
                },
                "width": {
                    "description": "Width of the region",
                    "type": "number",
                    "format": "double"
                },
                "height": {
                    "description": "Height of the Region",
                    "type": "number",
                    "format": "double"
                },
                "top": {
                    "description": "The top coordinate of the Region",
                    "type": "number",
                    "format": "double"
                },
                "left": {
                    "description": "The left coordinate of the Region",
                    "type": "number",
                    "format": "double"
                },
                "zIndex": {
                    "description": "The z-index of the Region to control Layering",
                    "type": "integer"
                },
                "playlists": {
                    "description": "An array of Playlists assigned",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Playlist"
                    }
                },
                "regionOptions": {
                    "description": "An array of Region Options",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionOption"
                    }
                },
                "permissions": {
                    "description": "An array of Permissions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "displayOrder": {
                    "description": "When linked from a Playlist, what is the display order of that link",
                    "type": "integer"
                },
                "duration": {
                    "description": "A read-only estimate of this Regions's total duration in seconds. This is valid when the parent layout status is 1 or 2.",
                    "type": "integer"
                }
            }
        },
        "RegionOption": {
            "properties": {
                "regionId": {
                    "description": "The regionId that this Option applies to",
                    "type": "integer"
                },
                "option": {
                    "description": "The option name",
                    "type": "string"
                },
                "value": {
                    "description": "The option value",
                    "type": "string"
                }
            }
        },
        "Resolution": {
            "properties": {
                "resolutionId": {
                    "description": "The ID of this Resolution",
                    "type": "integer"
                },
                "resolution": {
                    "description": "The resolution name",
                    "type": "string"
                },
                "width": {
                    "description": "The display width of the resolution",
                    "type": "number",
                    "format": "double"
                },
                "height": {
                    "description": "The display height of the resolution",
                    "type": "number",
                    "format": "double"
                },
                "designerWidth": {
                    "description": "The designer width of the resolution",
                    "type": "number",
                    "format": "double"
                },
                "designerHeight": {
                    "description": "The designer height of the resolution",
                    "type": "number",
                    "format": "double"
                },
                "version": {
                    "description": "The layout schema version",
                    "type": "integer"
                },
                "enabled": {
                    "description": "A flag indicating whether this resolution is enabled or not",
                    "type": "integer"
                }
            }
        },
        "Schedule": {
            "properties": {
                "eventId": {
                    "description": "The ID of this Event",
                    "type": "integer"
                },
                "eventTypeId": {
                    "description": "The Event Type ID",
                    "type": "integer"
                },
                "campaignId": {
                    "description": "The CampaignID this event is for",
                    "type": "integer"
                },
                "commandId": {
                    "description": "The CommandId this event is for",
                    "type": "integer"
                },
                "displayGroups": {
                    "description": "Display Groups assigned to this Scheduled Event.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DisplayGroup"
                    }
                },
                "userId": {
                    "description": "The userId that owns this event.",
                    "type": "integer"
                },
                "fromDt": {
                    "description": "A Unix timestamp representing the from date of this event in CMS time.",
                    "type": "integer"
                },
                "toDt": {
                    "description": "A Unix timestamp representing the to date of this event in CMS time.",
                    "type": "integer"
                },
                "isPriority": {
                    "description": "Integer indicating the event priority.",
                    "type": "integer"
                },
                "displayOrder": {
                    "description": "The display order for this event.",
                    "type": "integer"
                },
                "recurrenceType": {
                    "description": "If this event recurs when what is the recurrence period.",
                    "type": "string",
                    "enum": [
                        "None",
                        "Minute",
                        "Hour",
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "recurrenceDetail": {
                    "description": "If this event recurs when what is the recurrence frequency.",
                    "type": "integer"
                },
                "recurrenceRange": {
                    "description": "A Unix timestamp indicating the end time of the recurring events.",
                    "type": "integer"
                },
                "recurrenceRepeatsOn": {
                    "description": "Recurrence repeats on days - 0 to 7 where 0 is a monday",
                    "type": "string"
                },
                "campaign": {
                    "description": "The Campaign/Layout Name",
                    "type": "string",
                    "readOnly": true
                },
                "command": {
                    "description": "The Command Name",
                    "type": "string",
                    "readOnly": true
                },
                "dayPartId": {
                    "description": "The Day Part Id",
                    "type": "integer"
                }
            }
        },
        "Tag": {
            "properties": {
                "tagId": {
                    "description": "The Tag ID",
                    "type": "integer"
                },
                "tag": {
                    "description": "The Tag Name",
                    "type": "string"
                },
                "layoutIds": {
                    "description": "An array of layoutIDs with this Tag",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mediaIds": {
                    "description": "An array of mediaIds with this Tag",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Transition": {
            "properties": {
                "transitionId": {
                    "description": "The transition ID",
                    "type": "integer"
                },
                "transition": {
                    "description": "The transition name",
                    "type": "string"
                },
                "code": {
                    "description": "Code for transition",
                    "type": "string"
                },
                "hasDirection": {
                    "description": "Flag indicating whether this is a directional transition",
                    "type": "integer"
                },
                "hasDuration": {
                    "description": "Flag indicating whether this transition has a duration option",
                    "type": "integer"
                },
                "availableAsIn": {
                    "description": "Flag indicating whether this transition should be available for IN assignments",
                    "type": "integer"
                },
                "availableAsOut": {
                    "description": "Flag indicating whether this transition should be available for OUT assignments",
                    "type": "integer"
                }
            }
        },
        "User": {
            "properties": {
                "userId": {
                    "description": "The ID of this User",
                    "type": "integer"
                },
                "userName": {
                    "description": "The user name",
                    "type": "string"
                },
                "userTypeId": {
                    "description": "The user type ID",
                    "type": "integer"
                },
                "loggedIn": {
                    "description": "Flag indicating whether this user is logged in or not",
                    "type": "integer"
                },
                "email": {
                    "description": "Email address of the user used for email alerts",
                    "type": "string"
                },
                "homePageId": {
                    "description": "The pageId of the Homepage for this User",
                    "type": "integer"
                },
                "lastAccessed": {
                    "description": "A timestamp indicating the time the user last logged into the CMS",
                    "type": "integer"
                },
                "newUserWizard": {
                    "description": "A flag indicating whether this user has see the new user wizard",
                    "type": "integer"
                },
                "retired": {
                    "description": "A flag indicating whether the user is retired",
                    "type": "integer"
                },
                "groupId": {
                    "description": "The users user group ID",
                    "type": "integer"
                },
                "group": {
                    "description": "The users group name",
                    "type": "integer"
                },
                "libraryQuota": {
                    "description": "The users library quota in bytes",
                    "type": "integer"
                },
                "firstName": {
                    "description": "First Name",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last Name",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone Number",
                    "type": "string"
                },
                "ref1": {
                    "description": "Reference field 1",
                    "type": "string"
                },
                "ref2": {
                    "description": "Reference field 2",
                    "type": "string"
                },
                "ref3": {
                    "description": "Reference field 3",
                    "type": "string"
                },
                "ref4": {
                    "description": "Reference field 4",
                    "type": "string"
                },
                "ref5": {
                    "description": "Reference field 5",
                    "type": "string"
                },
                "groups": {
                    "description": "An array of user groups this user is assigned to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                },
                "campaigns": {
                    "description": "An array of Campaigns for this User",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Campaign"
                    }
                },
                "layouts": {
                    "description": "An array of Layouts for this User",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Layout"
                    }
                },
                "media": {
                    "description": "An array of Media for this user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Media"
                    }
                },
                "events": {
                    "description": "An array of Scheduled Events for this User",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Schedule"
                    }
                },
                "homePage": {
                    "description": "The name of home page",
                    "type": "string"
                },
                "userOptions": {
                    "description": "The user options",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserOption"
                    }
                },
                "isSystemNotification": {
                    "description": "Does this Group receive system notifications.",
                    "type": "integer"
                }
            }
        },
        "UserGroup": {
            "properties": {
                "groupId": {
                    "description": "The Group ID",
                    "type": "integer"
                },
                "group": {
                    "description": "The group name",
                    "type": "string"
                },
                "isUserSpecific": {
                    "description": "A flag indicating whether this is a user specific group or not",
                    "type": "integer"
                },
                "isEveryone": {
                    "description": "A flag indicating the special everyone group",
                    "type": "integer"
                },
                "libraryQuota": {
                    "description": "This users library quota in bytes. 0 = unlimited",
                    "type": "integer"
                },
                "isSystemNotification": {
                    "description": "Does this Group receive system notifications.",
                    "type": "integer"
                }
            }
        },
        "UserNotification": {
            "properties": {
                "userId": {
                    "description": "The User Id",
                    "type": "integer"
                },
                "notificationId": {
                    "description": "The Notification Id",
                    "type": "integer"
                },
                "releaseDt": {
                    "description": "Release Date expressed as Unix Timestamp",
                    "type": "integer"
                },
                "readDt": {
                    "description": "Read Date expressed as Unix Timestamp",
                    "type": "integer"
                },
                "emailDt": {
                    "description": "Email Date expressed as Unix Timestamp",
                    "type": "integer"
                },
                "read": {
                    "description": "A flag indicating whether to show as read or not",
                    "type": "integer"
                },
                "subject": {
                    "description": "The subject",
                    "type": "string"
                },
                "body": {
                    "description": "The body",
                    "type": "string"
                },
                "isInterrupt": {
                    "description": "Should the notification interrupt the CMS UI on navigate/login",
                    "type": "integer"
                },
                "isSystem": {
                    "description": "Flag for system notification",
                    "type": "integer"
                }
            }
        },
        "UserOption": {
            "properties": {
                "userId": {
                    "description": "The userId that this Option applies to",
                    "type": "integer"
                },
                "option": {
                    "description": "The option name",
                    "type": "string"
                },
                "value": {
                    "description": "The option value",
                    "type": "string"
                }
            }
        },
        "Widget": {
            "properties": {
                "widgetId": {
                    "description": "The Widget ID",
                    "type": "integer"
                },
                "playlistId": {
                    "description": "The ID of the Playlist this Widget belongs to",
                    "type": "integer"
                },
                "ownerId": {
                    "description": "The ID of the User that owns this Widget",
                    "type": "integer"
                },
                "type": {
                    "description": "The Module Type Code",
                    "type": "string"
                },
                "duration": {
                    "description": "The duration in seconds this widget should be shown",
                    "type": "integer"
                },
                "displayOrder": {
                    "description": "The display order of this widget",
                    "type": "integer"
                },
                "useDuration": {
                    "description": "Flag indicating if this widget has a duration that should be used",
                    "type": "integer"
                },
                "calculatedDuration": {
                    "description": "Calculated Duration of this widget after taking into account the useDuration flag",
                    "type": "integer"
                },
                "widgetOptions": {
                    "description": "An array of Widget Options",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WidgetOption"
                    }
                },
                "mediaIds": {
                    "description": "An array of MediaIds this widget is linked to",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "audio": {
                    "description": "An array of Audio MediaIds this widget is linked to",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WidgetAudio"
                    }
                },
                "permissions": {
                    "description": "An array of permissions for this widget",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "module": {
                    "description": "The Module Object for this Widget",
                    "$ref": "#/definitions/ModuleWidget"
                }
            }
        },
        "WidgetAudio": {
            "properties": {
                "widgetId": {
                    "description": "The Widget Id",
                    "type": "integer"
                },
                "mediaId": {
                    "description": "The Media Id",
                    "type": "integer"
                },
                "volume": {
                    "description": "The percentage volume",
                    "type": "integer"
                },
                "loop": {
                    "description": "Flag indicating whether to loop",
                    "type": "integer"
                }
            }
        },
        "WidgetOption": {
            "properties": {
                "widgetId": {
                    "description": "The Widget ID that this Option belongs to",
                    "type": "integer"
                },
                "type": {
                    "description": "The option type, either attrib or raw",
                    "type": "string"
                },
                "option": {
                    "description": "The option name",
                    "type": "string"
                },
                "value": {
                    "description": "The option value",
                    "type": "string"
                }
            }
        },
        "ModuleWidget": {
            "properties": {
                "widget": {
                    "description": "The Widget",
                    "$ref": "#/definitions/Widget"
                }
            }
        }
    },
    "responses": {
        "200": {
            "description": "successful operation"
        }
    },
    "securityDefinitions": {
        "auth": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "/api/authorize",
            "tokenUrl": "/api/authorize/access_token",
            "scopes": {
                "read:all": "read access",
                "write:all": "write access"
            }
        }
    },
    "security": [
        {
            "auth": [
                "write:all",
                "read:all"
            ]
        }
    ],
    "tags": [
        {
            "name": "misc",
            "description": "Miscellaneous"
        },
        {
            "name": "schedule",
            "description": "Schedule"
        },
        {
            "name": "notification",
            "description": "Notifications"
        },
        {
            "name": "layout",
            "description": "Layouts"
        },
        {
            "name": "playlist",
            "description": "Playlists"
        },
        {
            "name": "campaign",
            "description": "Campaigns"
        },
        {
            "name": "template",
            "description": "Templates"
        },
        {
            "name": "resolution",
            "description": "Resolutions"
        },
        {
            "name": "library",
            "description": "Library"
        },
        {
            "name": "display",
            "description": "Displays"
        },
        {
            "name": "displayGroup",
            "description": "Display Groups"
        },
        {
            "name": "displayprofile",
            "description": "Display Settings"
        },
        {
            "name": "dataset",
            "description": "DataSets"
        },
        {
            "name": "statistics",
            "description": "Statistics"
        },
        {
            "name": "log",
            "description": "Logs"
        },
        {
            "name": "user",
            "description": "Users"
        },
        {
            "name": "usergroup",
            "description": "User Groups"
        },
        {
            "name": "module",
            "description": "Modules and Widgets"
        },
        {
            "name": "command",
            "description": "Commands"
        }
    ],
    "externalDocs": {
        "description": "Manual",
        "url": "http://xibo.org.uk/manual"
    }
}