name: "Deploy on Comment"
on:
  issue_comment:
    types: [created]

jobs:
  deploy:
    name: Deploy
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Determine the correct branch associated with the PR
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      # Step 2: Set the status of the latest commit to "pending" at the beginning of the workflow
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      # Step 3: Checkout the branch associated with the PR
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      # Step 4: The Rest
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Configure Build X
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.ci
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: cms-web
          build-args: GIT_COMMIT=${{ github.sha }}
          push: false
          load: true
      - name: Pull
        run: |
          docker pull mysql:8
          docker pull ghcr.io/xibosignage/xibo-xmr:latest

      # Step 5: Perform the actual deployment (exit with a random status of 0 or 1)
      - name: Deploy
        run: |
          echo "Deploying..."
          exit $(($RANDOM%2))

      # Step 6: Add a comment to the PR with the workflow result
      - name: Add workflow result as comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow	}}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}'
