{#
/**
 * Copyright (C) 2022 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}
{% extends "authed.twig" %}
{% import "inline.twig" as inline %}

{% block title %}{{ "Fonts"|trans }} | {% endblock %}

{% block actionMenu %}
    <div class="widget-action-menu pull-right">
        {% if currentUser.featureEnabled("font.add") %}
            <button class="btn btn-success" href="#" id="fontUploadForm" title="{% trans "Add a new Font" %}"><i class="fa fa-plus-circle" aria-hidden="true"></i> {% trans "Upload Font" %}</button>
        {% endif %}
        <button class="btn btn-primary" id="refreshGrid" title="{% trans "Refresh the Table" %}" href="#"><i class="fa fa-refresh" aria-hidden="true"></i></button>
    </div>
{% endblock %}


{% block pageContent %}
    <div class="widget">
        <div class="widget-title">{% trans "Font" %}</div>
        <div class="widget-body">
            <div class="XiboGrid" id="{{ random() }}" data-grid-name="fontView">
                <div class="XiboFilter card mb-3 bg-light">
                    <div class="FilterDiv card-body" id="Filter">
                        <form class="form-inline">
                            {% set title %}{% trans "ID" %}{% endset %}
                            {{ inline.number("id", title) }}

                            {% set title %}{% trans "Name" %}{% endset %}
                            {{ inline.inputNameGrid('name', title) }}
                        </form>
                    </div>
                </div>
                <div class="XiboData card pt-3">
                    <table id="fonts" class="table table-striped" data-state-preference-name="fontGrid">
                        <thead>
                        <tr>
                            <th>{% trans "ID" %}</th>
                            <th>{% trans "name" %}</th>
                            <th>{% trans "File Name" %}</th>
                            <th>{% trans "Created" %}</th>
                            <th>{% trans "Modified" %}</th>
                            <th>{% trans "Modified By" %}</th>
                            <th>{% trans "Size" %}</th>
                            <th class="rowMenu"></th>
                        </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javaScript %}
    <script type="text/javascript" nonce="{{ cspNonce }}">
      var fontsTable;
      $(document).ready(function() {
        fontsTable = $("#fonts").DataTable({
          "language": dataTablesLanguage,
          dom: dataTablesTemplate,
          serverSide: true,
          stateSave: true,
          responsive: true,
          stateDuration: 0,
          stateLoadCallback: dataTableStateLoadCallback,
          stateSaveCallback: dataTableStateSaveCallback,
          filter: false,
          searchDelay: 3000,
          "order": [[1, "asc"]],
          ajax: {
            url: "{{ url_for("font.search") }}",
            data: function (d) {
              $.extend(d, $("#fonts").closest(".XiboGrid").find(".FilterDiv form").serializeObject());
            }
          },
          "columns": [
            {"data": "id", responsivePriority: 2},
            {"data": "name", responsivePriority: 2},
            {"data": "fileName", responsivePriority: 4},
            {"data": "createdAt", responsivePriority: 3},
            {"data": "modifiedAt", responsivePriority: 3},
            {"data": "modifiedBy", responsivePriority: 3},
            {
              "name": "size",
              responsivePriority: 3,
              "data": null,
              "render": {"_": "size", "display": "fileSizeFormatted", "sort": "size"}
            },
            {
              "orderable": false,
              responsivePriority: 1,
              "data": dataTableButtonsColumn
            }
          ]
        });

        fontsTable.on('draw', dataTableDraw);
        fontsTable.on('processing.dt', dataTableProcessing);
        dataTableAddButtons(fontsTable, $('#resolutions_wrapper').find('.dataTables_buttons'));

        $("#refreshGrid").click(function () {
            fontsTable.ajax.reload();
        });
      });

      $("#fontUploadForm").click(function(e) {
        e.preventDefault();

        openUploadForm({
          url: "{{ url_for("font.add") }}",
          title: "{% trans "Add Font" %}",
          initialisedBy: "font-upload",
          buttons: {
            main: {
              label: "{% trans "Done" %}",
              className: "btn-primary btn-bb-main",
              callback: function () {
                fontsTable.ajax.reload();
                XiboDialogClose();
              }
            }
          },
          templateOptions: {
            includeTagsInput: false,
            trans: {
              addFiles: "{% trans "Add files" %}",
              startUpload: "{% trans "Start upload" %}",
              cancelUpload: "{% trans "Cancel upload" %}"
            },
            upload: {
              maxSize: {{ libraryUpload.maxSize }},
              maxSizeMessage: "{{ libraryUpload.maxSizeMessage }}",
              validExt: "{{ validExt }}"
            },
          }
        });
      });
    </script>
{% endblock %}