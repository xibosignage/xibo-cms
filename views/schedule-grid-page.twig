{% extends "authed.twig" %}
{% import "inline.twig" as inline %}

{% block title %}{{ "Schedule"|trans }} | {% endblock %}

{% block actionMenu %}
    {% if currentUser.featureEnabled("schedule.add") %}
        <div class="widget-action-menu pull-right">
            <button class="btn btn-success XiboFormButton btns" title="{% trans "Add a new Scheduled event" %}" href="{{ url_for("schedule.add.form") }}"><span class="fa fa-plus"></span> {% trans "Add Event" %}</button>
        </div>
    {% endif %}
{% endblock %}

{% block pageContent %}
    <div class="widget">
        <div class="widget-title">{% trans "Schedule" %}</div>
        <div class="widget-body">
            <div class="XiboGrid" id="{{ random() }}" data-grid-name="scheduleGridView">
                <div class="XiboFilter card mb-3 bg-light">
                    <div class="FilterDiv card-body" id="Filter">
                        <form class="form-inline">
                            {% set title %}{% trans 'From Date' %}{% endset %}
                            {{ inline.dateTime("fromDt", title, defaults.fromDate, "", "", "", "") }}

                            {% set title %}{% trans 'To Date' %}{% endset %}
                            {{ inline.dateTime("toDt", title, defaults.toDate, "", "", "", "") }}

                            {% set title %}{% trans 'Event Type' %}{% endset %}
                            {{ inline.dropdown("filterEventTypeId", "single", title, "", [{id: null, value: ""}]|merge(eventTypes), "eventTypeId", "eventTypeName") }}

                            {% set attributes = [
                                { name: "data-width", value: "200px" },
                                { name: "data-allow-clear", value: "true" },
                                { name: "data-placeholder--id", value: null },
                                { name: "data-placeholder--value", value: "" },
                                { name: "data-search-url", value:  url_for("campaign.search") ~ "?type=list&isLayoutSpecific=-1" },
                                { name: "data-search-term", value: "campaign" },
                                { name: "data-search-term-tags", value: "tags" },
                                { name: "data-id-property", value: "campaignId" },
                                { name: "data-text-property", value: "campaign" }
                            ] %}

                            {% set title %}{% trans "Layout/Campaign" %}{% endset %}
                            {{ inline.dropdown("filterCampaignId", "single", title, null, null, "campaignId", "campaign", "", "pagedSelect", "", "", "", attributes) }}

                            {% set title %}{% trans "Display Group" %}{% endset %}
                            {% set attributes = [
                                { name: "data-width", value: "200px" },
                                { name: "data-allow-clear", value: "true" },
                                { name: "data-placeholder--id", value: null },
                                { name: "data-placeholder--value", value: "" },
                                { name: "data-search-url", value: url_for("displayGroup.search") ~ "?isDisplaySpecific=-1" },
                                { name: "data-search-term", value: "displayGroup" },
                                { name: "data-id-property", value: "displayGroupId" },
                                { name: "data-text-property", value: "displayGroup" }
                            ] %}
                            {{ inline.dropdown("filterDisplayGroupIds[]", "single", title, "", null, "displayGroupId", "displayGroup", "", "pagedSelect", "", "d", "", attributes) }}

                            {% set title %}{% trans 'Geo Aware?' %}{% endset %}
                            {% set options = [
                                { id: null, name: ""|trans },
                                { id: 0, name: "No"|trans },
                                { id: 1, name: "Yes"|trans }
                            ] %}
                            {{ inline.dropdown("geoAware", "single", title, "both", options, "id", "name") }}

                            {% set title %}{% trans 'Recurring?' %}{% endset %}
                            {% set options = [
                                { id: null, name: "" },
                                { id: 0, name: "No"|trans },
                                { id: 1, name: "Yes"|trans }
                            ] %}
                            {{ inline.dropdown("recurring", "single", title, "both", options, "id", "name") }}
                        </form>
                    </div>
                </div>
                <div class="XiboData card pt-3">
                    <table id="schedule-grid" class="table table-striped" data-state-preference-name="scheduleGrid">
                        <thead>
                        <tr>
                            <th>{% trans 'ID' %}</th>
                            <th>{% trans 'Event Type' %}</th>
                            <th>{% trans 'Start' %}</th>
                            <th>{% trans 'End' %}</th>
                            <th>{% trans 'Campaign' %}</th>
                            <th>{% trans 'Campaign ID' %}</th>
                            <th>{% trans 'Display Groups' %}</th>
                            <th>{% trans 'SoV' %}</th>
                            <th>{% trans 'Geo Aware?' %}</th>
                            <th>{% trans 'Recurring?' %}</th>
                            <th>{% trans 'Recurrence Type' %}</th>
                            <th>{% trans 'Recurrence Interval' %}</th>
                            <th>{% trans 'Recurrence Repeats On' %}</th>
                            <th>{% trans 'Recurrence End' %}</th>
                            <th>{% trans 'Priority?' %}</th>
                            <th class="rowMenu"></th>
                        </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javaScript %}
    <script type="text/javascript">
      $(function(){
        const table = $('#schedule-grid').DataTable({
          language: dataTablesLanguage,
          dom: dataTablesTemplate,
          serverSide: true,
          stateSave: true,
          responsive: true,
          stateDuration: 0,
          stateLoadCallback: dataTableStateLoadCallback,
          stateSaveCallback: dataTableStateSaveCallback,
          filter: false,
          searchDelay: 3000,
          order: [],
          ajax: {
            url: '{{ url_for("schedule.search") }}',
            data: function (d) {
              $.extend(d, $("#schedule-grid").closest(".XiboGrid").find(".FilterDiv form").serializeObject());
            }
          },
          columns: [
            {
              data: 'eventId',
              responsivePriority: 5,
              className: 'none',
            },
            {
              name: 'eventTypeId',
              responsivePriority: 2,
              data: function (data) {
                return data.eventTypeName
              }
            },
            {
              name: 'fromDt',
              responsivePriority: 2,
              data: function(data) {
                if(data.isAlways === 1) {
                  return '{{ "Always"|trans }}'
                } else {
                  return moment(data.fromDt, 'X').format(jsDateFormat)
                }
              }
            },
            {
              name: 'toDt',
              responsivePriority: 2,
              data: function(data) {
                if(data.isAlways === 1) {
                  return '{{ "Always"|trans }}'
                } else {
                  return moment(data.toDt, 'X').format(jsDateFormat)
                }
              }
            },
            {
              data: 'campaign',
              responsivePriority: 2,
            },
            {
              data: 'campaignId',
              responsivePriority: 5,
              className: 'none',
            },
            {
              name: 'displayGroups',
              responsivePriority: 2,
              sortable: false,
              data: function (data) {
                if (data.displayGroups.length > 1) {
                  return '<span class="badge" style="background-color: green; color: white" ' +
                    'data-toggle="popover" data-trigger="click" data-placement="top" ' +
                    'data-content="'+data.displayGroupList+'">'+ (data.displayGroups.length) +
                    '</span>';
                } else {
                  return data.displayGroupList
                }
              }
            },
            {
              data:'shareOfVoice',
              responsivePriority: 4,
            },
            {
              data:'isGeoAware',
              responsivePriority: 4,
              "render": dataTableTickCrossColumn,
            },
            {
              data:'recurringEvent',
              responsivePriority: 4,
              "render": dataTableTickCrossColumn,
            },
            {
              data: 'recurrenceType',
              responsivePriority: 4,
            },
            {
              data: 'recurrenceDetail',
              responsivePriority: 4,
            },
            {
              name: 'recurrenceRepeatsOn',
              responsivePriority: 4,
              data: function (data) {
                if (data.recurringEvent) {
                  if (data.recurrenceType === 'Week') {
                    const daysOfTheWeek = [
                      '{% trans "Monday" %}',
                      '{% trans "Tuesday" %}',
                      '{% trans "Wednesday" %}',
                      '{% trans "Thursday" %}',
                      '{% trans "Friday" %}',
                      '{% trans "Saturday" %}',
                      '{% trans "Sunday" %}'
                    ];

                    return daysOfTheWeek[data.recurrenceRepeatsOn-1];
                  } else if (data.recurrenceType === 'Month') {
                    return data.recurrenceMonthlyRepeatsOn
                  }
                } else {
                  return '';
                }
              }
            },
            {
              name: 'recurrenceRange',
              responsivePriority: 4,
              data: function(data) {
                if (data.recurringEvent) {
                  return moment(data.recurrenceRange, 'X').format(jsDateFormat)
                } else {
                  return ''
                }
              }
            },
            {
              data:'isPriority',
              responsivePriority: 2,
            },
            {
              orderable: false,
              responsivePriority: 1,
              data: dataTableButtonsColumn
            },
          ]
        });

        table.on('draw', function (e, settings) {
          dataTableDraw(e, settings);
          $('[data-toggle="popover"]').popover();
        });
        table.on('processing.dt', dataTableProcessing);
        dataTableAddButtons(table, $('#schedule-grid_wrapper').find('.dataTables_buttons'), true, true);
      });
    </script>
{% endblock %}

{% block javaScriptTemplates %}
    {{ parent() }}
    {% verbatim %}
        <script type="text/x-handlebars-template" id="reminderEventTemplate">
            <div class="form-group row">
                <input class="form-control" name="reminder_scheduleReminderId[]" type="hidden" value="{{ scheduleReminderId }}" />

                <div class="col-sm-2">
                    <label for="reminder_value[]">
                        <input class="form-control" name="reminder_value[]" type="number" value="{{ value }}" />
                    </label>
                </div>
                <div class="col-sm-2">
                    <label for="reminder_type[]">
                        <select class="form-control" name="reminder_type[]">
                            <option value="1" {{#eq type 1}}selected{{/eq}}>{% endverbatim %}{% trans "Minute" %}{% verbatim %}</option>
                            <option value="2" {{#eq type 2}}selected{{/eq}}>{% endverbatim %}{% trans "Hour" %}{% verbatim %}</option>
                            <option value="3" {{#eq type 3}}selected{{/eq}}>{% endverbatim %}{% trans "Day" %}{% verbatim %}</option>
                            <option value="4" {{#eq type 4}}selected{{/eq}}>{% endverbatim %}{% trans "Week" %}{% verbatim %}</option>
                            <option value="5" {{#eq type 5}}selected{{/eq}}>{% endverbatim %}{% trans "Month" %}{% verbatim %}</option>
                        </select>
                    </label>
                </div>
                <div class="col-sm-3">
                    <label for="reminder_option[]">
                        <select class="form-control" name="reminder_option[]">
                            <option value="1" {{#eq option 1}}selected{{/eq}}>{% endverbatim %}{% trans "Before schedule starts" %}{% verbatim %}</option>
                            <option value="2" {{#eq option 2}}selected{{/eq}}>{% endverbatim %}{% trans "After schedule starts" %}{% verbatim %}</option>
                            <option value="3" {{#eq option 3}}selected{{/eq}}>{% endverbatim %}{% trans "Before schedule ends" %}{% verbatim %}</option>
                            <option value="4" {{#eq option 4}}selected{{/eq}}>{% endverbatim %}{% trans "After schedule ends" %}{% verbatim %}</option>
                        </select>
                    </label>
                </div>
                <div class="col-sm-3">
                    <label for="reminder_isEmail[]">
                        <input type="checkbox" name="reminder_isEmail[]" {{#eq isEmail 1}}checked{{/eq}}/>
                        {% endverbatim %}{% trans "Notify by email?" %}{% verbatim %}
                        <input type="hidden" name="reminder_isEmailHidden[]" />
                    </label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-white"><i class="fa {{ buttonGlyph }}"></i></button>
                </div>
            </div>
        </script>
    {% endverbatim %}
{% endblock %}