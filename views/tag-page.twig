{#
/**
 * Copyright (C) 2020 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}
{% extends "authed.twig" %}
{% import "inline.twig" as inline %}

{% block title %}{{ "Tags"|trans }} | {% endblock %}

{% block actionMenu %}
    <div class="widget-action-menu pull-right">
        <button class="btn btn-success XiboFormButton btns" title="{% trans "Add a new Tag" %}" href="{{ url_for("tag.add.form") }}"> <i class="fa fa-plus-circle" aria-hidden="true"></i>  {% trans "Add Tag" %}</button>
    </div>
{% endblock %}

{% block pageContent %}
    <div class="widget">
        <div class="widget-title">{% trans "Tags" %}</div>
        <div class="widget-body">
            <div class="XiboGrid" id="{{ random() }}" data-grid-name="tagView">
                <div class="XiboFilter card mb-3 bg-light">
                    <div class="FilterDiv card-body" id="Filter">
                        <form class="form-inline">
                            {% set title %}{% trans "ID" %}{% endset %}
                            {{ inline.number("tagId", title) }}

                            {% set title %}{% trans "Name" %}{% endset %}
                            {{ inline.inputNameGrid('tag', title) }}

                            {% set title %}{% trans "Show System tags?" %}{% endset %}
                            {{ inline.checkbox("isSystem", title, 0) }}

                            {% set title %}{% trans "Show only tags with values?" %}{% endset %}
                            {{ inline.checkbox("haveOptions", title, 0) }}
                        </form>
                    </div>
                </div>
                <div class="XiboData card pt-3">
                    <table id="tags" class="table table-striped">
                        <thead>
                        <tr>
                            <th>{% trans "ID" %}</th>
                            <th>{% trans "Name" %}</th>
                            <th>{% trans "isRequired" %}</th>
                            <th>{% trans "Values" %}</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javaScript %}
    <script type="text/javascript">
        var table = $("#tags").DataTable({
            "language": dataTablesLanguage,
            dom: dataTablesTemplate,
            serverSide: true,
            stateSave: true,
            stateDuration: 0,
            responsive: true,
            stateLoadCallback: dataTableStateLoadCallback,
            stateSaveCallback: dataTableStateSaveCallback,
            filter: false,
            searchDelay: 3000,
            "order": [[ 1, "desc"]],
            ajax: {
                "url": "{{ url_for("tag.search") }}",
                "data": function(d) {
                    $.extend(d, $("#tags").closest(".XiboGrid").find(".FilterDiv form").serializeObject());
                }
            },
            "columns": [
                { "data": "tagId", responsivePriority: 2 },
                { "data": "tag", responsivePriority: 2 },
                {
                    "data": "isRequired",
                    responsivePriority: 3,
                    "render": function (data, type, row) {
                        if (type != "display") {
                            return data;
                        }

                        var icon = "";
                        if (data == 1)
                            icon = "fa-check";
                        else if (data == 0)
                            icon = "fa-times";

                        return "<span class='fa " + icon  + "'></span>";
                    }
                },
                {
                    "data": "options",
                    responsivePriority: 3,
                    "render": function (data, type, row) {

                        if (type != "display") {
                            return data;
                        }

                        return JSON.parse(data);
                    }
                },
                {
                    "orderable": false,
                    responsivePriority: 1,
                    "data": dataTableButtonsColumn
                }
            ]
        });

        table.on('draw', dataTableDraw);
        table.on('processing.dt', dataTableProcessing);
        dataTableAddButtons(table, $('#tags_wrapper').find('.dataTables_buttons'), false);
    </script>
{% endblock %}