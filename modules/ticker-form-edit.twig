{#
/**
 * Copyright (C) 2020 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}
{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Edit Ticker" %}
{% endblock %}

{% block extra %}{{ module.getExtra()|json_encode|raw }}{% endblock %}

{% block formHtml %}
    <div class="row">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a class="nav-link active" href="#general" role="tab" data-toggle="tab"><span>{% trans "General" %}</span></a></li>
            <li class="nav-item"><a class="nav-link" href="#configurationTab" role="tab" data-toggle="tab"><span>{% trans "Configuration" %}</span></a></li>
            <li class="nav-item"><a class="nav-link" href="#appearanceTab" role="tab" data-toggle="tab"><span>{% trans "Appearance" %}</span></a></li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                    {% trans "Templates" %}<span class="caret"></span>
                </a>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#templatePreset" role="tab" data-toggle="tab"><span>{% trans "Preset" %}</span></a>
                    <a class="dropdown-item template-override-controls" href="#templateTab"  role="tab" data-toggle="tab"><span>{% trans "Main" %}</span></a>
                    <a class="dropdown-item template-override-controls" href="#optionalStylesheetTab"  role="tab" data-toggle="tab"><span>{% trans "Optional Stylesheet" %}</span></a>
                    <a class="dropdown-item" href="#noDataTemplateTab" role="tab" data-toggle="tab"><span>{% trans "No Data" %}</span></a>
                    <a class="dropdown-item" href="#optionalJavascriptTab" role="tab" data-toggle="tab"><span>{% trans "Optional JavaScript" %}</span></a>
                </div>
            </li>
            <li class="nav-item"><a class="nav-link" href="#cacheTab" role="tab" data-toggle="tab"><span>{% trans "Caching" %}</span></a></li>
        </ul>
        <div class="col-md-12">
            <form id="tickerEditForm" class="XiboForm form-horizontal" method="put" action="{{ url_for("module.widget.edit", {id: module.widget.widgetId}) }}">
                <div class="tab-content">
                    <div class="tab-pane active" id="general">
                        {% set title %}{% trans "Name" %}{% endset %}
                        {% set helpText %}{% trans "An optional name for this widget" %}{% endset %}
                        {{ forms.input("name", title, module.getOption("name"), helpText) }}

                        {% set title %}{% trans "Set a duration?" %}{% endset %}
                        {% set helpText %}{% trans "Select to provide a specific duration for this Widget" %}{% endset %}
                        {{ forms.checkbox("useDuration", title, module.getUseDuration(), helpText) }}

                        {% set title %}{% trans "Duration" %}{% endset %}
                        {% set helpText %}{% trans "The duration in seconds this item should be displayed" %}{% endset %}
                        {{ forms.number("duration", title, module.getDuration(), helpText, "duration-fields", "required") }}

                        {% set title %}{% trans "Duration is per item" %}{% endset %}
                        {% set helpText %}{% trans "The duration specified is per item otherwise it is per feed." %}{% endset %}
                        {{ forms.checkbox("durationIsPerItem", title, module.getOption("durationIsPerItem"), helpText) }}

                        {% set title %}{% trans "Enable Stats Collection?" %}{% endset %}
                        {% set helpText %}{% trans "Enable the collection of Proof of Play statistics for this Widget. Ensure that ‘Enable Stats Collection’ is set to ‘On’ in the Display Settings." %}{% endset %}

                        {% set offOption %}{% trans "Off" %}{% endset %}
                        {% set onOption %}{% trans "On" %}{% endset %}
                        {% set inheritOption %}{% trans "Inherit" %}{% endset %}
                        {% set options = [
                            { id: "Off", value: offOption },
                            { id: "On", value: onOption },
                            { id: "Inherit", value: inheritOption }
                        ] %}
                        {{ forms.dropdown("enableStat", "single", title, module.getOption("enableStat", theme.getSetting("WIDGET_STATS_ENABLED_DEFAULT")), options, "id", "value", helpText) }}
                    </div>

                    <div class="tab-pane" id="configurationTab">
                        {% set title %}{% trans "Feed URL" %}{% endset %}
                        {% set helpText %}{% trans "The Link for the RSS feed" %}{% endset %}
                        {{ forms.input("uri", title, module.getOption("uri")|url_decode, helpText, "feed-fields") }}

                        {% set title %}{% trans "Number of Items" %}{% endset %}
                        {% set helpText %}{% trans "The Number of RSS items you want to display" %}{% endset %}
                        {{ forms.number("numItems", title, module.getOption("numItems"), helpText) }}

                        {% set title %}{% trans "Take items from the" %}{% endset %}
                        {% set helpText %}{% trans "Take the items from the beginning or the end of the list" %}{% endset %}
                        {% set startOfTheFeed %}{% trans "Start of the Feed" %}{% endset %}
                        {% set endOfTheFeed %}{% trans "End of the Feed" %}{% endset %}
                        {% set options = [
                        { takeitemsfromid: "start", takeitemsfrom: startOfTheFeed },
                        { takeitemsfromid: "end", takeitemsfrom: endOfTheFeed }
                        ] %}
                        {{ forms.dropdown("takeItemsFrom", "single", title, module.getOption("takeItemsFrom", "start"), options, "takeitemsfromid", "takeitemsfrom", helpText) }}

                        {% set title %}{% trans "Reverse Order?" %}{% endset %}
                        {% set helpText %}{% trans "Should we reverse the order of the feed items?" %}{% endset %}
                        {{ forms.checkbox("reverseOrder", title, module.getOption("reverseOrder"), helpText) }}

                        {% set title %}{% trans "Randomise?" %}{% endset %}
                        {% set helpText %}{% trans "Should the order of the feed be randomised? When enabled each time the Widget is shown the items will be randomly shuffled and displayed in a random order." %}{% endset %}
                        {{ forms.checkbox("randomiseItems", title, module.getOption("randomiseItems"), helpText) }}
                        
                        {% set title %}{% trans "Copyright" %}{% endset %}
                        {% set helpText %}{% trans "Copyright information to display as the last item in this feed. This can be styled with the #copyright CSS selector." %}{% endset %}
                        {{ forms.input("copyright", title, module.getOption("copyright"), helpText) }}

                        {% set title %}{% trans "Show items side by side?" %}{% endset %}
                        {% set helpText %}{% trans "Should items be shown side by side?" %}{% endset %}
                        {{ forms.checkbox("itemsSideBySide", title, module.getOption("itemsSideBySide"), helpText) }}

                        {% set title %}{% trans "Date Format" %}
                            <span class="fa fa-info-circle date-format-table"
                                  data-toggle="popover"
                                  data-trigger="hover">
                            </span>
                        {% endset %}
                        {% set helpText %}{% trans "The format to apply to all dates returned by the Widget." %}{% endset %}
                        {{ forms.input("dateFormat", title, module.getOption("dateFormat"), helpText) }}

                        {% set title %}{% trans "Allowable Attributes" %}{% endset %}
                        {% set helpText %}{% trans "A comma separated list of attributes that should not be stripped from the incoming feed." %}{% endset %}
                        {{ forms.input("allowedAttributes", title, module.getOption("allowedAttributes"), helpText) }}

                        {% set title %}{% trans "Strip Tags" %}{% endset %}
                        {% set helpText %}{% trans "A comma separated list of HTML tags that should be stripped from the feed in addition to the default ones." %}{% endset %}
                        {{ forms.input("stripTags", title, module.getOption("stripTags"), helpText) }}

                        {% set title %}{% trans "User Agent" %}{% endset %}
                        {% set helpText %}{% trans "Optionally set specific User Agent for this request, provide only the value, relevant header will be added automatically" %}{% endset %}
                        {{ forms.input("userAgent", title, module.getOption("userAgent"), helpText) }}

                        {% set title %}{% trans "Decode the HTML entities in this feed before parsing it" %}{% endset %}
                        {% set helpText %}{% trans "Should we decode the HTML entities in this feed before parsing it?" %}{% endset %}
                        {{ forms.checkbox("decodeHtml", title, module.getOption("decodeHtml"), helpText) }}

                        {% set title %}{% trans "Disable Date Sort" %}{% endset %}
                        {% set helpText %}{% trans "Should the date sort applied to the feed be disabled?" %}{% endset %}
                        {{ forms.checkbox("disableDateSort", title, module.getOption("disableDateSort"), helpText) }}
                    </div>

                    <div class="tab-pane" id="appearanceTab">
                        {% set title %}{% trans "Background Colour" %}{% endset %}
                        {% set helpText %}{% trans "The selected effect works best with a background colour. Optionally add one here." %}{% endset %}
                        {{ forms.colorPicker("backgroundColor", title, module.getOption("backgroundColor"), helpText, "background-color-group") }}

                        {% set title %}{% trans "Effect" %}{% endset %}
                        {% set helpText %}{% trans "Please select the effect that will be used to transition between items. Marquee effects are CPU intensive and may not be suitable for lower power displays." %}{% endset %}

                        {% set showAll %}{% trans "Show all items" %}{% endset %}
                        {% set showPaged %}{% trans "Paged" %}{% endset %}
                        {% set marqueeLeft %}{% trans "Marquee Left" %}{% endset %}
                        {% set marqueeRight %}{% trans "Marquee Right" %}{% endset %}
                        {% set marqueeUp %}{% trans "Marquee Up" %}{% endset %}
                        {% set marqueeDown %}{% trans "Marquee Down" %}{% endset %}
                        {% set optionGroups = [
                            {id: "showAll", label: showAll},
                            {id: "showPaged", label: showPaged}
                        ] %}

                        {% set noneOption %}{% trans "No effect - all items are shown" %}{% endset %}
                        {% set showAllOptions = [
                            { effectid: "none", effect: noneOption },
                            { effectid: "marqueeLeft", effect: marqueeLeft},
                            { effectid: "marqueeRight", effect: marqueeRight},
                            { effectid: "marqueeUp", effect: marqueeUp},
                            { effectid: "marqueeDown", effect: marqueeDown}
                        ] %}

                        {% set noTransitionOption %}{% trans "No transition" %}{% endset %}
                        {% set fade %}{% trans "Fade" %}{% endset %}
                        {% set fadeout %}{% trans "Fade Out" %}{% endset %}
                        {% set scrollHorz %}{% trans "Scroll Horizontal" %}{% endset %}
                        {% set scrollVert %}{% trans "Scroll Vertical" %}{% endset %}
                        {% set flipHorz %}{% trans "Flip Horizontal" %}{% endset %}
                        {% set flipVert %}{% trans "Flip Vertical" %}{% endset %}
                        {% set shuffle %}{% trans "Shuffle" %}{% endset %}
                        {% set tileSlide %}{% trans "Tile Slide" %}{% endset %}
                        {% set tileBlind %}{% trans "Tile Blind" %}{% endset %}
                        {% set showPagedOptions = [
                            { effectid: "noTransition", effect: noTransitionOption },
                            { effectid: "fade", effect: fade },
                            { effectid: "fadeout", effect: fadeout},
                            { effectid: "scrollHorz", effect: scrollHorz},
                            { effectid: "scrollVert", effect: scrollVert},
                            { effectid: "flipHorz", effect: flipHorz},
                            { effectid: "flipVert", effect: flipVert},
                            { effectid: "shuffle", effect: shuffle},
                            { effectid: "tileSlide", effect: tileSlide},
                            { effectid: "tileBlind", effect: tileBlind}
                        ] %}
                        {{ forms.dropdown("effect", "single", title, module.getOption("effect"), {showAll: showAllOptions, showPaged: showPagedOptions}, "effectid", "effect", helpText, "l", "", "", "", "", optionGroups) }}

                        {% set title %}{% trans "Speed" %}{% endset %}
                        {% set helpText %}{% trans "The transition speed of the selected effect in milliseconds (normal = 1000) or the Marquee Speed in a low to high scale (normal = 1)." %}{% endset %}
                        {{ forms.number("speed", title, module.getOption("speed", module.getOption("scrollSpeed")), helpText, "effect-controls") }}

                        {% set title %}{% trans "Text direction" %}{% endset %}
                        {% set helpText %}{% trans "Which direction does the text in the feed use?" %}{% endset %}
                        {% set leftToRight %}{% trans "Left to Right (LTR)" %}{% endset %}
                        {% set rightToLeft %}{% trans "Right to Left (RTL)" %}{% endset %}
                        {% set options = [
                        { textdirectionid: "ltr", textdirection: leftToRight },
                        { textdirectionid: "rtl", textdirection: rightToLeft }
                        ] %}
                        {{ forms.dropdown("textDirection", "single", title, module.getOption("textDirection", "ltr"), options, "textdirectionid", "textdirection", helpText) }}

                        {% set title %}{% trans "Items per page" %}{% endset %}
                        {% set helpText %}{% trans "If an effect has been selected from the General tab, how many pages should we split the items across? If you don't enter anything here 1 item will be put on each page." %}{% endset %}
                        {{ forms.number("itemsPerPage", title, module.getOption("itemsPerPage"), helpText, "effect-controls") }}

                    </div>

                    <div class="tab-pane" id="templatePreset">
                        <div class="form-content-title">
                            <h4>{% trans "Preset" %}</h4>
                        </div>

                        {% set title %}{% trans "Template" %}{% endset %}
                        {% set helpText %}{% trans "Select the template you would like to apply. This can be overridden using the check box below." %}{% endset %}
                        {{ forms.dropdown("templateId", "single", title, module.getOption("templateId", "title-only"), templatesAvailable, "id", "value", helptext, "template-selector-control selectPicker selectPickerWithImage", null, null, null, [{ name: "data-minimum-results-for-search", value: "Infinity" },{ name: "data-width", value: "100%" }], null, "image") }}

                        {% set title %}{% trans "Override the template?" %}{% endset %}
                        {% set helpText %}{% trans "Tick if you would like to override the template." %}{% endset %}
                        {{ forms.checkbox("overrideTemplate", title, module.getOption("overrideTemplate", 0), helpText) }}

                        {% set useTemplatesMessage %}
                           {% trans "With Override the Template selected enter your own text, html and css by using the Templates drop down menu in the tab header above." %}                     
                        {% endset %}
                        {{ forms.message(useTemplatesMessage, 'template-override-controls') }}

                        <div class="template-options template-selector-control">
                            {% set useTemplatesOptionsMessage %}
                            {% trans "You can change the appearance of this template using the options below." %}                     
                            {% endset %}
                            {{ forms.message(useTemplatesOptionsMessage, '') }}

                            {% set name %}{% trans "Background" %}{% endset %}
                            {{ forms.colorPicker("background-color", name, module.getOption("background-color"), "", "template-option template-option-background-color d-none") }}

                            {% set name %}{% trans "Title" %}{% endset %}
                            {{ forms.colorPicker("title-color", name, module.getOption("title-color"), "", "template-option template-option-title-color d-none") }}

                            {% set name %}{% trans "Name" %}{% endset %}
                            {{ forms.colorPicker("name-color", name, module.getOption("name-color"), "", "template-option template-option-name-color d-none") }}

                            {% set name %}{% trans "Description" %}{% endset %}
                            {{ forms.colorPicker("description-color", name, module.getOption("description-color"), "", "template-option template-option-description-color d-none") }}

                            {% set name %}{% trans "Font Size" %}{% endset %}
                            {{ forms.number("font-size", name, module.getOption("font-size"), "", "template-option template-option-font-size d-none") }}

                            {% set title %}{% trans "Image Fit" %}{% endset %}
                            {% set containText %}{% trans "Contain" %}{% endset %}
                            {% set coverText %}{% trans "Cover" %}{% endset %}
                            {% set fillText %}{% trans "Fill" %}{% endset %}
                            {% set options = [
                                { id: "contain", value: containText },
                                { id: "cover", value: coverText },
                                { id: "fill", value: fillText }
                            ] %}
                            {{ forms.dropdown("image-fit", "single", title, module.getOption("image-fit", "contain"), options, "id", "value", "", "template-option template-option-image-fit d-none") }}
                        </div>
                    </div>

                    <div class="tab-pane" id="templateTab">
                        <div class="form-content-title row">
                            <h4 class="col-6 text-left">{% trans "Main Template" %}</h4>
                            <div class="col-6 text-right">
                                <input type="checkbox" class="bootstrap-switch-target" id="ta_text_advanced" name="ta_text_advanced" {% if module.getOption("ta_text_advanced", 0) == 1 %}checked{% endif %} 
                                    data-size="small" 
                                    data-label-text="{% trans "Visual editor" %}" 
                                    data-label-width="80px" 
                                    data-on-text="{% trans "On" %}" 
                                    data-off-text="{% trans "Off" %}">
                            </div>
                        </div>

                        <div class="editor-messages">
                            {% set simpleTextEditorMessage %}
                                {% trans "Enter text or HTML in the box below." %}<br>
                            {% endset %}
                            {{ forms.message(simpleTextEditorMessage, 'ta_text-advanced-editor-hide inline-editor-hide') }}

                            {# Layout Designer messages #}
                            {% set layoutEditorMessage %}
                                {% trans "Enter text to display using the inline editor which can be opened by clicking in the preview on the left." %}
                                {% trans "When using the inline editor Shift+Enter will drop a single line. Enter alone starts a new paragraph." %}
                            {% endset %}
                            {{ forms.message(layoutEditorMessage, 'layout-designer-message inline-editor-show') }}

                            {# Playlist Editor messages #}
                            {% set playlistEditorMessage %}
                                {% trans "Enter the text to display. The red rectangle reflects the size of the region you are editing." %}
                                {% trans "Shift+Enter will drop a single line. Enter alone starts a new paragraph." %}
                            {% endset %}
                            {{ forms.message(playlistEditorMessage, 'playlist-editor-message ta_text-advanced-editor-show') }}
                        </div>

                        <div class="ckeditor_controls row inline-editor-hide" data-linked-to="ta_text">
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-4 control-label" for="ckeditor_snippets_select">{% trans "Snippets" %}</label>
                                    <div class="col-sm-8 ckeditor_select_container">
                                        <select id="ckeditor_snippets_select"
                                            class="ckeditor_snippets_select form-control"
                                            data-linked-to="ta_text">
                                            <option value=""></option>
                                            <option value="Name">Name</option>
                                            <option value="Title">Title</option>
                                            <option value="Description">Description</option>
                                            <option value="Date">Date</option>
                                            <option value="Content">Content</option>
                                            <option value="Copyright">Copyright</option>
                                            <option value="Link">Link</option>
                                            <option value="PermaLink">PermaLink</option>
                                            <option value="Tag|Namespace">Tag|Namespace</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-4 control-label" for="ckeditor_library_select2">{% trans "Library" %}</label>
                                    <div class="col-sm-8">
                                        <select id="ckeditor_library_select2"
                                                class="ckeditor_library_select form-control"
                                                data-linked-to="ta_text"
                                                data-search-url="{{ url_for("library.search") }}"
                                                data-image-url="{{ url_for("library.download", {id: ':id'}) }}?preview=1">
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {{ forms.textarea("ta_text", "", module.getRawNode("template"), "", "inline-editor-hide", "", 10) }}
                        
                    </div>

                    <div class="tab-pane" id="optionalStylesheetTab">
                        <div class="form-content-title">
                            <h4>{% trans "Optional Stylesheet Template" %}</h4>
                        </div>
                        
                        {{ forms.textarea("ta_css", "", module.getRawNode("css"), "", "template-override-controls", "", 10) }}
                    </div>

                    <div class="tab-pane" id="noDataTemplateTab">
                        <div class="form-content-title row">
                            <h4 class="col-6 text-left">{% trans "No Data Template" %}</h4>
                            <div class="col-6 text-right">
                                <input type="checkbox" class="bootstrap-switch-target" id="noDataMessage_advanced" name="noDataMessage_advanced" {% if module.getOption("noDataMessage_advanced", 0) == 1 %}checked{% endif %} 
                                    data-size="small" 
                                    data-label-text="{% trans "Visual editor" %}" 
                                    data-label-width="80px" 
                                    data-on-text="{% trans "On" %}" 
                                    data-off-text="{% trans "Off" %}">
                            </div>
                        </div>

                        {% set noDataMessageMessage1 %}
                            {% trans "Enter text or HTML in the box below." %}<br>
                        {% endset %}
                        {{ forms.message(noDataMessageMessage1, 'noDataMessage-advanced-editor-hide') }}

                        {% set noDataMessageMessage2 %}
                            {% trans "Enter the text to display." %}
                            {% trans "The red rectangle reflects the size of the region you are editing." %}
                            {% trans "Shift+Enter will drop a single line. Enter alone starts a new paragraph." %}
                        {% endset %}
                        {{ forms.message(noDataMessageMessage2, 'noDataMessage-advanced-editor-show') }}

                        {% set helpText %}
                            {% trans "A message to display when no data is returned from the source" %}
                        {% endset %}

                        {{ forms.textarea("noDataMessage", "", module.getRawNode("noDataMessage"), helpText, "", "", 5) }}
                    </div>

                    <div class="tab-pane" id="optionalJavascriptTab">
                        <div class="form-content-title">
                            <h4>{% trans "Optional JavaScript" %}</h4>
                        </div>

                        {{ forms.textarea("javaScript", "", module.getRawNode("javaScript"), "", "", "", 10) }}
                    </div>

                    <div class="tab-pane" id="cacheTab">
                        {% set title %}{% trans "Update Interval (mins)" %}{% endset %}
                        {% set helpText %}{% trans "Please enter the update interval in minutes. This should be kept as high as possible. For example, if the data will only change once per hour this could be set to 60." %}{% endset %}
                        {{ forms.number("updateInterval", title, module.getOption("updateInterval", 60), helpText, "", "required") }}
                                                
                        {% set title %}{% trans "Update Interval Images (mins)" %}{% endset %}
                        {% set helpText %}{% trans "Override the update interval for images. This should be kept as high as possible and can be set for all Tickers in Module Settings." %}{% endset %}
                        {{ forms.number("updateIntervalImages", title, module.getOption("updateIntervalImages", module.getSetting("updateIntervalImages", 240)), helpText, "", "required") }}
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}